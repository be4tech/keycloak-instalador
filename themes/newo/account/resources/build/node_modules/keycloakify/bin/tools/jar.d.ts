/// <reference types="node" />
import { ZipFile } from "yazl";
export type ZipEntry = {
    zipPath: string;
} & ({
    fsPath: string;
} | {
    buffer: Buffer;
});
export type ZipEntryGenerator = AsyncGenerator<ZipEntry, void, unknown>;
type CommonJarArgs = {
    groupId: string;
    artifactId: string;
    version: string;
};
export type JarStreamArgs = CommonJarArgs & {
    asyncPathGeneratorFn(): ZipEntryGenerator;
};
export type JarArgs = CommonJarArgs & {
    targetPath: string;
    rootPath: string;
};
export declare function jarStream({ groupId, artifactId, version, asyncPathGeneratorFn }: JarStreamArgs): Promise<ZipFile>;
/**
 * Create a jar archive, using the resources found at `rootPath` (a directory) and write the
 * archive to `targetPath` (a file). Use `groupId`, `artifactId` and `version` to define
 * the contents of the pom.properties file which is going to be added to the archive.
 * The root directory is expectedto have a conventional maven/gradle folder structure with a
 * single `pom.xml` file at the root and a `src/main/resources` directory containing all
 * application resources.
 */
export default function jar({ groupId, artifactId, version, rootPath, targetPath }: JarArgs): Promise<void>;
export {};
