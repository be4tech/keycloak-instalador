{"ast":null,"code":"export function memoize(fn, options) {\n  const cache = new Map();\n  const {\n    argsLength = fn.length,\n    max = Infinity\n  } = options !== null && options !== void 0 ? options : {};\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const key = JSON.stringify(args.slice(0, argsLength).map(v => {\n      if (v === null) {\n        return \"null\";\n      }\n      if (v === undefined) {\n        return \"undefined\";\n      }\n      switch (typeof v) {\n        case \"number\":\n          return `number-${v}`;\n        case \"string\":\n          return `string-${v}`;\n        case \"boolean\":\n          return `boolean-${v ? \"true\" : \"false\"}`;\n      }\n    }).join(\"-sIs9sAslOdeWlEdIos3-\"));\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    if (max === cache.size) {\n      for (const key of cache.keys()) {\n        cache.delete(key);\n        break;\n      }\n    }\n    const value = fn(...args);\n    cache.set(key, value);\n    return value;\n  };\n}","map":{"version":3,"names":["memoize","fn","options","cache","Map","argsLength","length","max","Infinity","_len","arguments","args","Array","_key","key","JSON","stringify","slice","map","v","undefined","join","has","get","size","keys","delete","value","set"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/tools/memoize.ts"],"sourcesContent":["type SimpleType = number | string | boolean | null | undefined;\ntype FuncWithSimpleParams<T extends SimpleType[], R> = (...args: T) => R;\n\nexport function memoize<T extends SimpleType[], R>(\n    fn: FuncWithSimpleParams<T, R>,\n    options?: {\n        argsLength?: number;\n        max?: number;\n    }\n): FuncWithSimpleParams<T, R> {\n    const cache = new Map<string, ReturnType<FuncWithSimpleParams<T, R>>>();\n\n    const { argsLength = fn.length, max = Infinity } = options ?? {};\n\n    return ((...args: Parameters<FuncWithSimpleParams<T, R>>) => {\n        const key = JSON.stringify(\n            args\n                .slice(0, argsLength)\n                .map(v => {\n                    if (v === null) {\n                        return \"null\";\n                    }\n                    if (v === undefined) {\n                        return \"undefined\";\n                    }\n                    switch (typeof v) {\n                        case \"number\":\n                            return `number-${v}`;\n                        case \"string\":\n                            return `string-${v}`;\n                        case \"boolean\":\n                            return `boolean-${v ? \"true\" : \"false\"}`;\n                    }\n                })\n                .join(\"-sIs9sAslOdeWlEdIos3-\")\n        );\n\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n\n        if (max === cache.size) {\n            for (const key of cache.keys()) {\n                cache.delete(key);\n                break;\n            }\n        }\n\n        const value = fn(...args);\n\n        cache.set(key, value);\n\n        return value;\n    }) as any;\n}\n"],"mappings":"AAGA,OAAM,SAAUA,OAAOA,CACnBC,EAA8B,EAC9BC,OAGC;EAED,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAkD;EAEvE,MAAM;IAAEC,UAAU,GAAGJ,EAAE,CAACK,MAAM;IAAEC,GAAG,GAAGC;EAAQ,CAAE,GAAGN,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;EAEhE,OAAQ,YAAoD;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAJ,MAAA,EAAhDK,IAA4C,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAA5CF,IAA4C,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IACpD,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CACtBL,IAAI,CACCM,KAAK,CAAC,CAAC,EAAEZ,UAAU,CAAC,CACpBa,GAAG,CAACC,CAAC,IAAG;MACL,IAAIA,CAAC,KAAK,IAAI,EAAE;QACZ,OAAO,MAAM;;MAEjB,IAAIA,CAAC,KAAKC,SAAS,EAAE;QACjB,OAAO,WAAW;;MAEtB,QAAQ,OAAOD,CAAC;QACZ,KAAK,QAAQ;UACT,OAAO,UAAUA,CAAC,EAAE;QACxB,KAAK,QAAQ;UACT,OAAO,UAAUA,CAAC,EAAE;QACxB,KAAK,SAAS;UACV,OAAO,WAAWA,CAAC,GAAG,MAAM,GAAG,OAAO,EAAE;;IAEpD,CAAC,CAAC,CACDE,IAAI,CAAC,uBAAuB,CAAC,CACrC;IAED,IAAIlB,KAAK,CAACmB,GAAG,CAACR,GAAG,CAAC,EAAE;MAChB,OAAOX,KAAK,CAACoB,GAAG,CAACT,GAAG,CAAC;;IAGzB,IAAIP,GAAG,KAAKJ,KAAK,CAACqB,IAAI,EAAE;MACpB,KAAK,MAAMV,GAAG,IAAIX,KAAK,CAACsB,IAAI,EAAE,EAAE;QAC5BtB,KAAK,CAACuB,MAAM,CAACZ,GAAG,CAAC;QACjB;;;IAIR,MAAMa,KAAK,GAAG1B,EAAE,CAAC,GAAGU,IAAI,CAAC;IAEzBR,KAAK,CAACyB,GAAG,CAACd,GAAG,EAAEa,KAAK,CAAC;IAErB,OAAOA,KAAK;EAChB,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}