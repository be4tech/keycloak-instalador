{"ast":null,"code":"import { useEffect } from \"react\";\nimport { memoize } from \"../../tools/memoize\";\nimport { fallbackLanguageTag } from \"../../login/i18n/i18n\";\nimport { useConst } from \"../../tools/useConst\";\nimport { useConstCallback } from \"../../tools/useConstCallback\";\nimport { assert } from \"tsafe/assert\";\nimport { Evt } from \"evt\";\nexport const evtTermMarkdown = Evt.create(undefined);\nassert();\n/** Allow to avoid bundling the terms and download it on demand*/\nexport function useDownloadTerms(params) {\n  const {\n    kcContext\n  } = params;\n  const {\n    downloadTermMarkdownMemoized\n  } = function useClosure() {\n    const {\n      downloadTermMarkdown\n    } = params;\n    const downloadTermMarkdownConst = useConstCallback(downloadTermMarkdown);\n    const downloadTermMarkdownMemoized = useConst(() => memoize(currentLanguageTag => downloadTermMarkdownConst({\n      currentLanguageTag\n    })));\n    return {\n      downloadTermMarkdownMemoized\n    };\n  }();\n  useEffect(() => {\n    var _a, _b;\n    if (kcContext.pageId !== \"terms.ftl\") {\n      return;\n    }\n    downloadTermMarkdownMemoized((_b = (_a = kcContext.locale) === null || _a === void 0 ? void 0 : _a.currentLanguageTag) !== null && _b !== void 0 ? _b : fallbackLanguageTag).then(thermMarkdown => evtTermMarkdown.state = thermMarkdown);\n  }, []);\n}","map":{"version":3,"names":["useEffect","memoize","fallbackLanguageTag","useConst","useConstCallback","assert","Evt","evtTermMarkdown","create","undefined","useDownloadTerms","params","kcContext","downloadTermMarkdownMemoized","useClosure","downloadTermMarkdown","downloadTermMarkdownConst","currentLanguageTag","pageId","_b","_a","locale","then","thermMarkdown","state"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/lib/useDownloadTerms.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport { memoize } from \"keycloakify/tools/memoize\";\nimport { fallbackLanguageTag } from \"keycloakify/login/i18n/i18n\";\nimport { useConst } from \"keycloakify/tools/useConst\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport { assert } from \"tsafe/assert\";\nimport { Evt } from \"evt\";\nimport { KcContext } from \"../kcContext\";\n\nexport const evtTermMarkdown = Evt.create<string | undefined>(undefined);\n\nexport type KcContextLike = {\n    pageId: string;\n    locale?: {\n        currentLanguageTag: string;\n    };\n};\n\nassert<KcContext extends KcContextLike ? true : false>();\n\n/** Allow to avoid bundling the terms and download it on demand*/\nexport function useDownloadTerms(params: {\n    kcContext: KcContextLike;\n    downloadTermMarkdown: (params: { currentLanguageTag: string }) => Promise<string>;\n}) {\n    const { kcContext } = params;\n\n    const { downloadTermMarkdownMemoized } = (function useClosure() {\n        const { downloadTermMarkdown } = params;\n\n        const downloadTermMarkdownConst = useConstCallback(downloadTermMarkdown);\n\n        const downloadTermMarkdownMemoized = useConst(() =>\n            memoize((currentLanguageTag: string) => downloadTermMarkdownConst({ currentLanguageTag }))\n        );\n\n        return { downloadTermMarkdownMemoized };\n    })();\n\n    useEffect(() => {\n        if (kcContext.pageId !== \"terms.ftl\") {\n            return;\n        }\n\n        downloadTermMarkdownMemoized(kcContext.locale?.currentLanguageTag ?? fallbackLanguageTag).then(\n            thermMarkdown => (evtTermMarkdown.state = thermMarkdown)\n        );\n    }, []);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ;AACxB,SAASC,mBAAmB,QAAQ;AACpC,SAASC,QAAQ,QAAQ;AACzB,SAASC,gBAAgB,QAAQ;AACjC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,GAAG,QAAQ,KAAK;AAGzB,OAAO,MAAMC,eAAe,GAAGD,GAAG,CAACE,MAAM,CAAqBC,SAAS,CAAC;AASxEJ,MAAM,EAAkD;AAExD;AACA,OAAM,SAAUK,gBAAgBA,CAACC,MAGhC;EACG,MAAM;IAAEC;EAAS,CAAE,GAAGD,MAAM;EAE5B,MAAM;IAAEE;EAA4B,CAAE,GAAI,SAASC,UAAUA,CAAA;IACzD,MAAM;MAAEC;IAAoB,CAAE,GAAGJ,MAAM;IAEvC,MAAMK,yBAAyB,GAAGZ,gBAAgB,CAACW,oBAAoB,CAAC;IAExE,MAAMF,4BAA4B,GAAGV,QAAQ,CAAC,MAC1CF,OAAO,CAAEgB,kBAA0B,IAAKD,yBAAyB,CAAC;MAAEC;IAAkB,CAAE,CAAC,CAAC,CAC7F;IAED,OAAO;MAAEJ;IAA4B,CAAE;EAC3C,CAAC,CAAC,CAAE;EAEJb,SAAS,CAAC,MAAK;;IACX,IAAIY,SAAS,CAACM,MAAM,KAAK,WAAW,EAAE;MAClC;;IAGJL,4BAA4B,CAAC,CAAAM,EAAA,IAAAC,EAAA,GAAAR,SAAS,CAACS,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAEH,kBAAkB,cAAAE,EAAA,cAAAA,EAAA,GAAIjB,mBAAmB,CAAC,CAACoB,IAAI,CAC1FC,aAAa,IAAKhB,eAAe,CAACiB,KAAK,GAAGD,aAAc,CAC3D;EACL,CAAC,EAAE,EAAE,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}