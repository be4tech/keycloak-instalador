{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function LoginConfigTotp(props) {\n  var _a;\n  const {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    Template,\n    classes\n  } = props;\n  const {\n    getClassName\n  } = useGetClassName({\n    doUseDefaultCss,\n    classes\n  });\n  const {\n    url,\n    isAppInitiatedAction,\n    totp,\n    mode,\n    messagesPerField\n  } = kcContext;\n  const {\n    msg,\n    msgStr\n  } = i18n;\n  const algToKeyUriAlg = {\n    \"HmacSHA1\": \"SHA1\",\n    \"HmacSHA256\": \"SHA256\",\n    \"HmacSHA512\": \"SHA512\"\n  };\n  return _jsx(Template, Object.assign({}, {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes\n  }, {\n    headerNode: msg(\"loginTotpTitle\")\n  }, {\n    children: _jsxs(_Fragment, {\n      children: [_jsxs(\"ol\", Object.assign({\n        id: \"kc-totp-settings\"\n      }, {\n        children: [_jsxs(\"li\", {\n          children: [_jsx(\"p\", {\n            children: msg(\"loginTotpStep1\")\n          }), _jsx(\"ul\", Object.assign({\n            id: \"kc-totp-supported-apps\"\n          }, {\n            children: totp.supportedApplications.map(app => _jsx(\"li\", {\n              children: msgStr(app, app)\n            }))\n          }))]\n        }), mode && mode == \"manual\" ? _jsxs(_Fragment, {\n          children: [_jsxs(\"li\", {\n            children: [_jsx(\"p\", {\n              children: msg(\"loginTotpManualStep2\")\n            }), _jsx(\"p\", {\n              children: _jsx(\"span\", Object.assign({\n                id: \"kc-totp-secret-key\"\n              }, {\n                children: totp.totpSecretEncoded\n              }))\n            }), _jsx(\"p\", {\n              children: _jsx(\"a\", Object.assign({\n                href: totp.qrUrl,\n                id: \"mode-barcode\"\n              }, {\n                children: msg(\"loginTotpScanBarcode\")\n              }))\n            })]\n          }), _jsxs(\"li\", {\n            children: [_jsx(\"p\", {\n              children: msg(\"loginTotpManualStep3\")\n            }), _jsx(\"p\", {\n              children: _jsxs(\"ul\", {\n                children: [_jsxs(\"li\", Object.assign({\n                  id: \"kc-totp-type\"\n                }, {\n                  children: [msg(\"loginTotpType\"), \": \", msg(`loginTotp.${totp.policy.type}`)]\n                })), _jsxs(\"li\", Object.assign({\n                  id: \"kc-totp-algorithm\"\n                }, {\n                  children: [msg(\"loginTotpAlgorithm\"), \": \", (_a = algToKeyUriAlg === null || algToKeyUriAlg === void 0 ? void 0 : algToKeyUriAlg[totp.policy.algorithm]) !== null && _a !== void 0 ? _a : totp.policy.algorithm]\n                })), _jsxs(\"li\", Object.assign({\n                  id: \"kc-totp-digits\"\n                }, {\n                  children: [msg(\"loginTotpDigits\"), \": \", totp.policy.digits]\n                })), totp.policy.type === \"totp\" ? _jsxs(\"li\", Object.assign({\n                  id: \"kc-totp-period\"\n                }, {\n                  children: [msg(\"loginTotpInterval\"), \": \", totp.policy.period]\n                })) : _jsxs(\"li\", Object.assign({\n                  id: \"kc-totp-counter\"\n                }, {\n                  children: [msg(\"loginTotpCounter\"), \": \", totp.policy.initialCounter]\n                }))]\n              })\n            })]\n          })]\n        }) : _jsxs(\"li\", {\n          children: [_jsx(\"p\", {\n            children: msg(\"loginTotpStep2\")\n          }), _jsx(\"img\", {\n            id: \"kc-totp-secret-qr-code\",\n            src: `data:image/png;base64, ${totp.totpSecretQrCode}`,\n            alt: \"Figure: Barcode\"\n          }), _jsx(\"br\", {}), _jsx(\"p\", {\n            children: _jsx(\"a\", Object.assign({\n              href: totp.manualUrl,\n              id: \"mode-manual\"\n            }, {\n              children: msg(\"loginTotpUnableToScan\")\n            }))\n          })]\n        }), _jsxs(\"li\", {\n          children: [_jsx(\"p\", {\n            children: msg(\"loginTotpStep3\")\n          }), _jsx(\"p\", {\n            children: msg(\"loginTotpStep3DeviceName\")\n          })]\n        })]\n      })), _jsxs(\"form\", Object.assign({\n        action: url.loginAction,\n        className: getClassName(\"kcFormClass\"),\n        id: \"kc-totp-settings-form\",\n        method: \"post\"\n      }, {\n        children: [_jsxs(\"div\", Object.assign({\n          className: getClassName(\"kcFormGroupClass\")\n        }, {\n          children: [_jsxs(\"div\", Object.assign({\n            className: getClassName(\"kcInputWrapperClass\")\n          }, {\n            children: [_jsx(\"label\", Object.assign({\n              htmlFor: \"totp\",\n              className: getClassName(\"kcLabelClass\")\n            }, {\n              children: msg(\"authenticatorCode\")\n            })), \" \", _jsx(\"span\", Object.assign({\n              className: \"required\"\n            }, {\n              children: \"*\"\n            }))]\n          })), _jsxs(\"div\", Object.assign({\n            className: getClassName(\"kcInputWrapperClass\")\n          }, {\n            children: [_jsx(\"input\", {\n              type: \"text\",\n              id: \"totp\",\n              name: \"totp\",\n              autoComplete: \"off\",\n              className: getClassName(\"kcInputClass\"),\n              \"aria-invalid\": messagesPerField.existsError(\"totp\")\n            }), messagesPerField.existsError(\"totp\") && _jsx(\"span\", Object.assign({\n              id: \"input-error-otp-code\",\n              className: getClassName(\"kcInputErrorMessageClass\"),\n              \"aria-live\": \"polite\"\n            }, {\n              children: messagesPerField.get(\"totp\")\n            }))]\n          })), _jsx(\"input\", {\n            type: \"hidden\",\n            id: \"totpSecret\",\n            name: \"totpSecret\",\n            value: totp.totpSecret\n          }), mode && _jsx(\"input\", {\n            type: \"hidden\",\n            id: \"mode\",\n            value: mode\n          })]\n        })), _jsxs(\"div\", Object.assign({\n          className: getClassName(\"kcFormGroupClass\")\n        }, {\n          children: [_jsxs(\"div\", Object.assign({\n            className: getClassName(\"kcInputWrapperClass\")\n          }, {\n            children: [_jsx(\"label\", Object.assign({\n              htmlFor: \"userLabel\",\n              className: getClassName(\"kcLabelClass\")\n            }, {\n              children: msg(\"loginTotpDeviceName\")\n            })), \" \", totp.otpCredentials.length >= 1 && _jsx(\"span\", Object.assign({\n              className: \"required\"\n            }, {\n              children: \"*\"\n            }))]\n          })), _jsxs(\"div\", Object.assign({\n            className: getClassName(\"kcInputWrapperClass\")\n          }, {\n            children: [_jsx(\"input\", {\n              type: \"text\",\n              id: \"userLabel\",\n              name: \"userLabel\",\n              autoComplete: \"off\",\n              className: getClassName(\"kcInputClass\"),\n              \"aria-invalid\": messagesPerField.existsError(\"userLabel\")\n            }), messagesPerField.existsError(\"userLabel\") && _jsx(\"span\", Object.assign({\n              id: \"input-error-otp-label\",\n              className: getClassName(\"kcInputErrorMessageClass\"),\n              \"aria-live\": \"polite\"\n            }, {\n              children: messagesPerField.get(\"userLabel\")\n            }))]\n          }))]\n        })), isAppInitiatedAction ? _jsxs(_Fragment, {\n          children: [_jsx(\"input\", {\n            type: \"submit\",\n            className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\")),\n            id: \"saveTOTPBtn\",\n            value: msgStr(\"doSubmit\")\n          }), _jsx(\"button\", Object.assign({\n            type: \"submit\",\n            className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonDefaultClass\"), getClassName(\"kcButtonLargeClass\"), getClassName(\"kcButtonLargeClass\")),\n            id: \"cancelTOTPBtn\",\n            name: \"cancel-aia\",\n            value: \"true\"\n          }, {\n            children: msg(\"doCancel\")\n          }))]\n        }) : _jsx(\"input\", {\n          type: \"submit\",\n          className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\")),\n          id: \"saveTOTPBtn\",\n          value: msgStr(\"doSubmit\")\n        })]\n      }))]\n    })\n  }));\n}","map":{"version":3,"names":["clsx","useGetClassName","LoginConfigTotp","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","url","isAppInitiatedAction","totp","mode","messagesPerField","msg","msgStr","algToKeyUriAlg","_jsx","Object","assign","headerNode","children","_jsxs","_Fragment","id","supportedApplications","map","app","totpSecretEncoded","href","qrUrl","policy","type","_a","algorithm","digits","period","initialCounter","src","totpSecretQrCode","alt","manualUrl","action","loginAction","className","method","htmlFor","name","autoComplete","existsError","get","value","totpSecret","otpCredentials","length"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/pages/LoginConfigTotp.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { MessageKey } from \"keycloakify/login/i18n/i18n\";\n\nexport default function LoginConfigTotp(props: PageProps<Extract<KcContext, { pageId: \"login-config-totp.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, isAppInitiatedAction, totp, mode, messagesPerField } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const algToKeyUriAlg: Record<(typeof kcContext)[\"totp\"][\"policy\"][\"algorithm\"], string> = {\n        \"HmacSHA1\": \"SHA1\",\n        \"HmacSHA256\": \"SHA256\",\n        \"HmacSHA512\": \"SHA512\"\n    };\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"loginTotpTitle\")}>\n            <>\n                <ol id=\"kc-totp-settings\">\n                    <li>\n                        <p>{msg(\"loginTotpStep1\")}</p>\n\n                        <ul id=\"kc-totp-supported-apps\">\n                            {totp.supportedApplications.map(app => (\n                                <li>{msgStr(app as MessageKey, app)}</li>\n                            ))}\n                        </ul>\n                    </li>\n\n                    {mode && mode == \"manual\" ? (\n                        <>\n                            <li>\n                                <p>{msg(\"loginTotpManualStep2\")}</p>\n                                <p>\n                                    <span id=\"kc-totp-secret-key\">{totp.totpSecretEncoded}</span>\n                                </p>\n                                <p>\n                                    <a href={totp.qrUrl} id=\"mode-barcode\">\n                                        {msg(\"loginTotpScanBarcode\")}\n                                    </a>\n                                </p>\n                            </li>\n                            <li>\n                                <p>{msg(\"loginTotpManualStep3\")}</p>\n                                <p>\n                                    <ul>\n                                        <li id=\"kc-totp-type\">\n                                            {msg(\"loginTotpType\")}: {msg(`loginTotp.${totp.policy.type}`)}\n                                        </li>\n                                        <li id=\"kc-totp-algorithm\">\n                                            {msg(\"loginTotpAlgorithm\")}: {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                                        </li>\n                                        <li id=\"kc-totp-digits\">\n                                            {msg(\"loginTotpDigits\")}: {totp.policy.digits}\n                                        </li>\n                                        {totp.policy.type === \"totp\" ? (\n                                            <li id=\"kc-totp-period\">\n                                                {msg(\"loginTotpInterval\")}: {totp.policy.period}\n                                            </li>\n                                        ) : (\n                                            <li id=\"kc-totp-counter\">\n                                                {msg(\"loginTotpCounter\")}: {totp.policy.initialCounter}\n                                            </li>\n                                        )}\n                                    </ul>\n                                </p>\n                            </li>\n                        </>\n                    ) : (\n                        <li>\n                            <p>{msg(\"loginTotpStep2\")}</p>\n                            <img id=\"kc-totp-secret-qr-code\" src={`data:image/png;base64, ${totp.totpSecretQrCode}`} alt=\"Figure: Barcode\" />\n                            <br />\n                            <p>\n                                <a href={totp.manualUrl} id=\"mode-manual\">\n                                    {msg(\"loginTotpUnableToScan\")}\n                                </a>\n                            </p>\n                        </li>\n                    )}\n                    <li>\n                        <p>{msg(\"loginTotpStep3\")}</p>\n                        <p>{msg(\"loginTotpStep3DeviceName\")}</p>\n                    </li>\n                </ol>\n\n                <form action={url.loginAction} className={getClassName(\"kcFormClass\")} id=\"kc-totp-settings-form\" method=\"post\">\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <label htmlFor=\"totp\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"authenticatorCode\")}\n                            </label>{\" \"}\n                            <span className=\"required\">*</span>\n                        </div>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <input\n                                type=\"text\"\n                                id=\"totp\"\n                                name=\"totp\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"totp\")}\n                            />\n\n                            {messagesPerField.existsError(\"totp\") && (\n                                <span id=\"input-error-otp-code\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                    {messagesPerField.get(\"totp\")}\n                                </span>\n                            )}\n                        </div>\n                        <input type=\"hidden\" id=\"totpSecret\" name=\"totpSecret\" value={totp.totpSecret} />\n                        {mode && <input type=\"hidden\" id=\"mode\" value={mode} />}\n                    </div>\n\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <label htmlFor=\"userLabel\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"loginTotpDeviceName\")}\n                            </label>{\" \"}\n                            {totp.otpCredentials.length >= 1 && <span className=\"required\">*</span>}\n                        </div>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <input\n                                type=\"text\"\n                                id=\"userLabel\"\n                                name=\"userLabel\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"userLabel\")}\n                            />\n                            {messagesPerField.existsError(\"userLabel\") && (\n                                <span id=\"input-error-otp-label\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                    {messagesPerField.get(\"userLabel\")}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n\n                    {isAppInitiatedAction ? (\n                        <>\n                            <input\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                id=\"saveTOTPBtn\"\n                                value={msgStr(\"doSubmit\")}\n                            />\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonDefaultClass\"),\n                                    getClassName(\"kcButtonLargeClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                id=\"cancelTOTPBtn\"\n                                name=\"cancel-aia\"\n                                value=\"true\"\n                            >\n                                {msg(\"doCancel\")}\n                            </button>\n                        </>\n                    ) : (\n                        <input\n                            type=\"submit\"\n                            className={clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\"))}\n                            id=\"saveTOTPBtn\"\n                            value={msgStr(\"doSubmit\")}\n                        />\n                    )}\n                </form>\n            </>\n        </Template>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}