{"ast":null,"code":"var _jsxFileName = \"/Users/user/NewoDev/keycloakify-starter/src/keycloak-theme/login/pages/LoginResetPassword.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"//This is to show that you can create stories for pages that you haven't overloaded.\\n\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { createPageStory } from \\\"../createPageStory\\\";\\n\\nconst { PageStory } = createPageStory({\\n    pageId: \\\"login-reset-password.ftl\\\"\\n});\\n\\nexport default {\\n    title: \\\"login/LoginResetPassword\\\",\\n    component: PageStory,\\n} as ComponentMeta<typeof PageStory>;\\n\\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;\\n\\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: true, registrationEmailAsUsername: true }\\n        }}\\n    />\\n);\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 57,\n      \"line\": 15\n    },\n    \"endLoc\": {\n      \"col\": 76,\n      \"line\": 15\n    },\n    \"startBody\": {\n      \"col\": 57,\n      \"line\": 15\n    },\n    \"endBody\": {\n      \"col\": 76,\n      \"line\": 15\n    }\n  },\n  \"WithEmailAsUsername\": {\n    \"startLoc\": {\n      \"col\": 69,\n      \"line\": 17\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 23\n    },\n    \"startBody\": {\n      \"col\": 69,\n      \"line\": 17\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 23\n    }\n  }\n};\n\n//This is to show that you can create stories for pages that you haven't overloaded.\n\nimport { createPageStory } from \"../createPageStory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PageStory\n} = createPageStory({\n  pageId: \"login-reset-password.ftl\"\n});\nexport default {\n  title: \"login/LoginResetPassword\",\n  component: PageStory\n};\nexport const Default = () => /*#__PURE__*/_jsxDEV(PageStory, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 64\n}, this);\n_c = Default;\n;\nexport const WithEmailAsUsername = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      loginWithEmailAllowed: true,\n      registrationEmailAsUsername: true\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\n_c2 = WithEmailAsUsername;\nDefault.parameters = {\n  storySource: {\n    source: \"() => <PageStory />\"\n  },\n  ...Default.parameters\n};\nWithEmailAsUsername.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: true, registrationEmailAsUsername: true }\\n        }}\\n    />\\n)\"\n  },\n  ...WithEmailAsUsername.parameters\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Default\");\n$RefreshReg$(_c2, \"WithEmailAsUsername\");\nexport const __namedExportsOrder = [\"Default\", \"WithEmailAsUsername\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","createPageStory","jsxDEV","_jsxDEV","PageStory","pageId","title","component","Default","fileName","_jsxFileName","lineNumber","columnNumber","_c","WithEmailAsUsername","kcContext","realm","loginWithEmailAllowed","registrationEmailAsUsername","_c2","parameters","storySource","source","$RefreshReg$","__namedExportsOrder"],"sources":["/Users/user/NewoDev/keycloakify-starter/src/keycloak-theme/login/pages/LoginResetPassword.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"//This is to show that you can create stories for pages that you haven't overloaded.\\n\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { createPageStory } from \\\"../createPageStory\\\";\\n\\nconst { PageStory } = createPageStory({\\n    pageId: \\\"login-reset-password.ftl\\\"\\n});\\n\\nexport default {\\n    title: \\\"login/LoginResetPassword\\\",\\n    component: PageStory,\\n} as ComponentMeta<typeof PageStory>;\\n\\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;\\n\\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: true, registrationEmailAsUsername: true }\\n        }}\\n    />\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":57,\"line\":15},\"endLoc\":{\"col\":76,\"line\":15},\"startBody\":{\"col\":57,\"line\":15},\"endBody\":{\"col\":76,\"line\":15}},\"WithEmailAsUsername\":{\"startLoc\":{\"col\":69,\"line\":17},\"endLoc\":{\"col\":1,\"line\":23},\"startBody\":{\"col\":69,\"line\":17},\"endBody\":{\"col\":1,\"line\":23}}};\n    \n//This is to show that you can create stories for pages that you haven't overloaded.\n\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { createPageStory } from \"../createPageStory\";\n\nconst { PageStory } = createPageStory({\n    pageId: \"login-reset-password.ftl\"\n});\n\nexport default {\n    title: \"login/LoginResetPassword\",\n    component: PageStory,\n} as ComponentMeta<typeof PageStory>;\n\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;;\n\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { loginWithEmailAllowed: true, registrationEmailAsUsername: true }\n        }}\n    />\n);\n\n\n\nDefault.parameters = { storySource: { source: \"() => <PageStory />\" }, ...Default.parameters };\nWithEmailAsUsername.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: true, registrationEmailAsUsername: true }\\n        }}\\n    />\\n)\" }, ...WithEmailAsUsername.parameters };"],"mappings":";AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,suBAAsuB;AACtvB;AACA,IAAIC,iBAAiB,GAAG;EAAC,SAAS,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE;EAAC,CAAC;EAAC,qBAAqB,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;;AAE3T;;AAGA,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAM;EAAEC;AAAU,CAAC,GAAGH,eAAe,CAAC;EAClCI,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,eAAe;EACXC,KAAK,EAAE,0BAA0B;EACjCC,SAAS,EAAEH;AACf,CAAC;AAED,OAAO,MAAMI,OAAyC,GAAGA,CAAA,kBAAML,OAAA,CAACC,SAAS;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC;AAACC,EAAA,GAAhEL,OAAyC;AAAuB;AAE7E,OAAO,MAAMM,mBAAqD,GAAGA,CAAA,kBACjEX,OAAA,CAACC,SAAS;EACNW,SAAS,EAAE;IACPC,KAAK,EAAE;MAAEC,qBAAqB,EAAE,IAAI;MAAEC,2BAA2B,EAAE;IAAK;EAC5E;AAAE;EAAAT,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACJ;AAACO,GAAA,GANWL,mBAAqD;AAUlEN,OAAO,CAACY,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAsB,CAAC;EAAE,GAAGd,OAAO,CAACY;AAAW,CAAC;AAC9FN,mBAAmB,CAACM,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAA8J,CAAC;EAAE,GAAGR,mBAAmB,CAACM;AAAW,CAAC;AAAC,IAAAP,EAAA,EAAAM,GAAA;AAAAI,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAJ,GAAA;AAAA,aAAAK,mBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}