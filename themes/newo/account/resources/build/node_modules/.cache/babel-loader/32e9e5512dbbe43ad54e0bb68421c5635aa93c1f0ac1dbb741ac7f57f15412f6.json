{"ast":null,"code":"import { deepAssign } from \"../../tools/deepAssign\";\nimport { getKcContextFromWindow } from \"./getKcContextFromWindow\";\nimport { pathJoin } from \"../../bin/tools/pathJoin\";\nimport { pathBasename } from \"../../tools/pathBasename\";\nimport { resourcesCommonDirPathRelativeToPublicDir } from \"../../bin/mockTestingResourcesPath\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { kcContextMocks, kcContextCommonMock } from \"../../account/kcContext/kcContextMocks\";\nexport function createGetKcContext(params) {\n  const {\n    mockData\n  } = params !== null && params !== void 0 ? params : {};\n  function getKcContext(params) {\n    const {\n      mockPageId,\n      storyPartialKcContext\n    } = params !== null && params !== void 0 ? params : {};\n    const realKcContext = getKcContextFromWindow();\n    if (mockPageId !== undefined && realKcContext === undefined) {\n      //TODO maybe trow if no mock fo custom page\n      console.log(`%cKeycloakify: ${symToStr({\n        mockPageId\n      })} set to ${mockPageId}.`, \"background: red; color: yellow; font-size: medium\");\n      const kcContextDefaultMock = kcContextMocks.find(_ref => {\n        let {\n          pageId\n        } = _ref;\n        return pageId === mockPageId;\n      });\n      const partialKcContextCustomMock = (() => {\n        const out = {};\n        const mockDataPick = mockData === null || mockData === void 0 ? void 0 : mockData.find(_ref2 => {\n          let {\n            pageId\n          } = _ref2;\n          return pageId === mockPageId;\n        });\n        if (mockDataPick !== undefined) {\n          deepAssign({\n            \"target\": out,\n            \"source\": mockDataPick\n          });\n        }\n        if (storyPartialKcContext !== undefined) {\n          deepAssign({\n            \"target\": out,\n            \"source\": storyPartialKcContext\n          });\n        }\n        return Object.keys(out).length === 0 ? undefined : out;\n      })();\n      if (kcContextDefaultMock === undefined && partialKcContextCustomMock === undefined) {\n        console.warn([`WARNING: You declared the non build in page ${mockPageId} but you didn't `, `provide mock data needed to debug the page outside of Keycloak as you are trying to do now.`, `Please check the documentation of the getKcContext function`].join(\"\\n\"));\n      }\n      const kcContext = {};\n      deepAssign({\n        \"target\": kcContext,\n        \"source\": kcContextDefaultMock !== undefined ? kcContextDefaultMock : Object.assign({\n          \"pageId\": mockPageId\n        }, kcContextCommonMock)\n      });\n      if (partialKcContextCustomMock !== undefined) {\n        deepAssign({\n          \"target\": kcContext,\n          \"source\": partialKcContextCustomMock\n        });\n      }\n      return {\n        kcContext\n      };\n    }\n    if (realKcContext === undefined) {\n      return {\n        \"kcContext\": undefined\n      };\n    }\n    if (realKcContext.themeType !== \"account\") {\n      return {\n        \"kcContext\": undefined\n      };\n    }\n    {\n      const {\n        url\n      } = realKcContext;\n      url.resourcesCommonPath = pathJoin(url.resourcesPath, pathBasename(resourcesCommonDirPathRelativeToPublicDir));\n    }\n    return {\n      \"kcContext\": realKcContext\n    };\n  }\n  return {\n    getKcContext\n  };\n}","map":{"version":3,"names":["deepAssign","getKcContextFromWindow","pathJoin","pathBasename","resourcesCommonDirPathRelativeToPublicDir","symToStr","kcContextMocks","kcContextCommonMock","createGetKcContext","params","mockData","getKcContext","mockPageId","storyPartialKcContext","realKcContext","undefined","console","log","kcContextDefaultMock","find","_ref","pageId","partialKcContextCustomMock","out","mockDataPick","_ref2","Object","keys","length","warn","join","kcContext","assign","themeType","url","resourcesCommonPath","resourcesPath"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/account/kcContext/createGetKcContext.ts"],"sourcesContent":["import type { DeepPartial } from \"keycloakify/tools/DeepPartial\";\nimport { deepAssign } from \"keycloakify/tools/deepAssign\";\nimport type { ExtendKcContext } from \"./getKcContextFromWindow\";\nimport { getKcContextFromWindow } from \"./getKcContextFromWindow\";\nimport { pathJoin } from \"keycloakify/bin/tools/pathJoin\";\nimport { pathBasename } from \"keycloakify/tools/pathBasename\";\nimport { resourcesCommonDirPathRelativeToPublicDir } from \"keycloakify/bin/mockTestingResourcesPath\";\nimport { symToStr } from \"tsafe/symToStr\";\nimport { kcContextMocks, kcContextCommonMock } from \"keycloakify/account/kcContext/kcContextMocks\";\n\nexport function createGetKcContext<KcContextExtension extends { pageId: string } = never>(params?: {\n    mockData?: readonly DeepPartial<ExtendKcContext<KcContextExtension>>[];\n}) {\n    const { mockData } = params ?? {};\n\n    function getKcContext<PageId extends ExtendKcContext<KcContextExtension>[\"pageId\"] | undefined = undefined>(params?: {\n        mockPageId?: PageId;\n        storyPartialKcContext?: DeepPartial<Extract<ExtendKcContext<KcContextExtension>, { pageId: PageId }>>;\n    }): {\n        kcContext: PageId extends undefined\n            ? ExtendKcContext<KcContextExtension> | undefined\n            : Extract<ExtendKcContext<KcContextExtension>, { pageId: PageId }>;\n    } {\n        const { mockPageId, storyPartialKcContext } = params ?? {};\n\n        const realKcContext = getKcContextFromWindow<KcContextExtension>();\n\n        if (mockPageId !== undefined && realKcContext === undefined) {\n            //TODO maybe trow if no mock fo custom page\n\n            console.log(`%cKeycloakify: ${symToStr({ mockPageId })} set to ${mockPageId}.`, \"background: red; color: yellow; font-size: medium\");\n\n            const kcContextDefaultMock = kcContextMocks.find(({ pageId }) => pageId === mockPageId);\n\n            const partialKcContextCustomMock = (() => {\n                const out: DeepPartial<ExtendKcContext<KcContextExtension>> = {};\n\n                const mockDataPick = mockData?.find(({ pageId }) => pageId === mockPageId);\n\n                if (mockDataPick !== undefined) {\n                    deepAssign({\n                        \"target\": out,\n                        \"source\": mockDataPick\n                    });\n                }\n\n                if (storyPartialKcContext !== undefined) {\n                    deepAssign({\n                        \"target\": out,\n                        \"source\": storyPartialKcContext\n                    });\n                }\n\n                return Object.keys(out).length === 0 ? undefined : out;\n            })();\n\n            if (kcContextDefaultMock === undefined && partialKcContextCustomMock === undefined) {\n                console.warn(\n                    [\n                        `WARNING: You declared the non build in page ${mockPageId} but you didn't `,\n                        `provide mock data needed to debug the page outside of Keycloak as you are trying to do now.`,\n                        `Please check the documentation of the getKcContext function`\n                    ].join(\"\\n\")\n                );\n            }\n\n            const kcContext: any = {};\n\n            deepAssign({\n                \"target\": kcContext,\n                \"source\": kcContextDefaultMock !== undefined ? kcContextDefaultMock : { \"pageId\": mockPageId, ...kcContextCommonMock }\n            });\n\n            if (partialKcContextCustomMock !== undefined) {\n                deepAssign({\n                    \"target\": kcContext,\n                    \"source\": partialKcContextCustomMock\n                });\n            }\n\n            return { kcContext };\n        }\n\n        if (realKcContext === undefined) {\n            return { \"kcContext\": undefined as any };\n        }\n\n        if (realKcContext.themeType !== \"account\") {\n            return { \"kcContext\": undefined as any };\n        }\n\n        {\n            const { url } = realKcContext;\n\n            url.resourcesCommonPath = pathJoin(url.resourcesPath, pathBasename(resourcesCommonDirPathRelativeToPublicDir));\n        }\n\n        return { \"kcContext\": realKcContext as any };\n    }\n\n    return { getKcContext };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}