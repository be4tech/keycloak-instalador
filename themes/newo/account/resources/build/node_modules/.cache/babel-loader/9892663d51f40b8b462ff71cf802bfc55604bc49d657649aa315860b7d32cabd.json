{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { lazy, Suspense } from \"react\";\nimport { assert } from \"tsafe/assert\";\nconst Password = lazy(() => import(\"../account/pages/Password\"));\nconst Account = lazy(() => import(\"../account/pages/Account\"));\nexport default function Fallback(props) {\n  const {\n      kcContext\n    } = props,\n    rest = __rest(props, [\"kcContext\"]);\n  return _jsx(Suspense, {\n    children: (() => {\n      switch (kcContext.pageId) {\n        case \"password.ftl\":\n          return _jsx(Password, Object.assign({\n            kcContext: kcContext\n          }, rest));\n        case \"account.ftl\":\n          return _jsx(Account, Object.assign({\n            kcContext: kcContext\n          }, rest));\n      }\n      assert(false);\n    })()\n  });\n}","map":{"version":3,"names":["lazy","Suspense","assert","Password","Account","Fallback","props","kcContext","rest","__rest","_jsx","children","pageId","Object","assign"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/account/Fallback.tsx"],"sourcesContent":["import { lazy, Suspense } from \"react\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport type { I18n } from \"keycloakify/account/i18n\";\nimport type { KcContext } from \"./kcContext\";\nimport { assert, type Equals } from \"tsafe/assert\";\n\nconst Password = lazy(() => import(\"keycloakify/account/pages/Password\"));\nconst Account = lazy(() => import(\"keycloakify/account/pages/Account\"));\n\nexport default function Fallback(props: PageProps<KcContext, I18n>) {\n    const { kcContext, ...rest } = props;\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"password.ftl\":\n                        return <Password kcContext={kcContext} {...rest} />;\n                    case \"account.ftl\":\n                        return <Account kcContext={kcContext} {...rest} />;\n                }\n                assert<Equals<typeof kcContext, never>>(false);\n            })()}\n        </Suspense>\n    );\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAItC,SAASC,MAAM,QAAqB,cAAc;AAElD,MAAMC,QAAQ,GAAGH,IAAI,CAAC,MAAM,MAAM,CAAC;AACnC,MAAMI,OAAO,GAAGJ,IAAI,CAAC,MAAM,MAAM,CAAC;AAElC,eAAc,SAAUK,QAAQA,CAACC,KAAiC;EAC9D,MAAM;MAAEC;IAAS,IAAcD,KAAK;IAAdE,IAAI,GAAAC,MAAA,CAAKH,KAAK,EAA9B,aAAsB,CAAQ;EAEpC,OACII,IAAA,CAACT,QAAQ;IAAAU,QAAA,EACJ,CAAC,MAAK;MACH,QAAQJ,SAAS,CAACK,MAAM;QACpB,KAAK,cAAc;UACf,OAAOF,IAAA,CAACP,QAAQ,EAAAU,MAAA,CAAAC,MAAA;YAACP,SAAS,EAAEA;UAAS,GAAMC,IAAI,EAAI;QACvD,KAAK,aAAa;UACd,OAAOE,IAAA,CAACN,OAAO,EAAAS,MAAA,CAAAC,MAAA;YAACP,SAAS,EAAEA;UAAS,GAAMC,IAAI,EAAI;;MAE1DN,MAAM,CAAkC,KAAK,CAAC;IAClD,CAAC,EAAC;EAAE,EACG;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}