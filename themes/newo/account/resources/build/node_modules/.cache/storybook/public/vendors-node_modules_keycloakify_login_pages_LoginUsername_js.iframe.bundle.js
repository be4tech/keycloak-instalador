"use strict";
(globalThis["webpackChunkkeycloakify_starter"] = globalThis["webpackChunkkeycloakify_starter"] || []).push([["vendors-node_modules_keycloakify_login_pages_LoginUsername_js"],{

/***/ "./node_modules/keycloakify/lib/useGetClassName.js":
/*!*********************************************************!*\
  !*** ./node_modules/keycloakify/lib/useGetClassName.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createUseClassName: () => (/* binding */ createUseClassName)
/* harmony export */ });
/* harmony import */ var _tools_clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools/clsx */ "./node_modules/keycloakify/tools/clsx.js");
/* harmony import */ var _tools_useConstCallback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/useConstCallback */ "./node_modules/keycloakify/tools/useConstCallback.js");


function createUseClassName(params) {
    const { defaultClasses } = params;
    function useGetClassName(params) {
        const { classes } = params;
        const getClassName = (0,_tools_useConstCallback__WEBPACK_IMPORTED_MODULE_1__.useConstCallback)((classKey) => {
            return (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(classKey, defaultClasses[classKey], classes === null || classes === void 0 ? void 0 : classes[classKey]);
        });
        return { getClassName };
    }
    return { useGetClassName };
}
//# sourceMappingURL=useGetClassName.js.map

/***/ }),

/***/ "./node_modules/keycloakify/login/lib/useGetClassName.js":
/*!***************************************************************!*\
  !*** ./node_modules/keycloakify/login/lib/useGetClassName.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useGetClassName: () => (/* binding */ useGetClassName)
/* harmony export */ });
/* harmony import */ var _lib_useGetClassName__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/useGetClassName */ "./node_modules/keycloakify/lib/useGetClassName.js");

const { useGetClassName } = (0,_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_0__.createUseClassName)({
    "defaultClasses": {
        "kcHtmlClass": "login-pf",
        "kcLoginClass": "login-pf-page",
        "kcContentWrapperClass": "row",
        "kcHeaderClass": "login-pf-page-header",
        "kcHeaderWrapperClass": undefined,
        "kcFormCardClass": "card-pf",
        "kcFormCardAccountClass": "login-pf-accounts",
        "kcFormSocialAccountClass": "login-pf-social-section",
        "kcFormSocialAccountContentClass": "col-xs-12 col-sm-6",
        "kcFormHeaderClass": "login-pf-header",
        "kcLocaleWrapperClass": undefined,
        "kcFeedbackErrorIcon": "pficon pficon-error-circle-o",
        "kcFeedbackWarningIcon": "pficon pficon-warning-triangle-o",
        "kcFeedbackSuccessIcon": "pficon pficon-ok",
        "kcFeedbackInfoIcon": "pficon pficon-info",
        "kcResetFlowIcon": "pficon pficon-arrow fa-2x",
        "kcFormGroupClass": "form-group",
        "kcLabelWrapperClass": "col-xs-12 col-sm-12 col-md-12 col-lg-12",
        "kcSignUpClass": "login-pf-signup",
        "kcInfoAreaWrapperClass": undefined,
        "kcLogoClass": "login-pf-brand",
        "kcContainerClass": "container-fluid",
        "kcContentClass": "col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3",
        "kcFeedbackAreaClass": "col-md-12",
        "kcLocaleClass": "col-xs-12 col-sm-1",
        "kcAlertIconClasserror": "pficon pficon-error-circle-o",
        "kcFormAreaClass": "col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2",
        "kcFormSocialAccountListClass": "login-pf-social list-unstyled login-pf-social-all",
        "kcFormSocialAccountDoubleListClass": "login-pf-social-double-col",
        "kcFormSocialAccountListLinkClass": "login-pf-social-link",
        "kcWebAuthnKeyIcon": "pficon pficon-key",
        "kcWebAuthnDefaultIcon": "pficon pficon-key",
        "kcFormClass": "form-horizontal",
        "kcFormGroupErrorClass": "has-error",
        "kcLabelClass": "control-label",
        "kcInputClass": "form-control",
        "kcInputErrorMessageClass": "pf-c-form__helper-text pf-m-error required kc-feedback-text",
        "kcInputWrapperClass": "col-xs-12 col-sm-12 col-md-12 col-lg-12",
        "kcFormOptionsClass": "col-xs-12 col-sm-12 col-md-12 col-lg-12",
        "kcFormButtonsClass": "col-xs-12 col-sm-12 col-md-12 col-lg-12",
        "kcFormSettingClass": "login-pf-settings",
        "kcTextareaClass": "form-control",
        "kcInfoAreaClass": "col-xs-12 col-sm-4 col-md-4 col-lg-5 details",
        // user-profile grouping
        "kcFormGroupHeader": "pf-c-form__group",
        // css classes for form buttons main class used for all buttons
        "kcButtonClass": "btn",
        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)
        "kcButtonPrimaryClass": "btn-primary",
        "kcButtonDefaultClass": "btn-default",
        // classes defining size of the button
        "kcButtonLargeClass": "btn-lg",
        "kcButtonBlockClass": "btn-block",
        // css classes for input
        "kcInputLargeClass": "input-lg",
        // css classes for form accessability
        "kcSrOnlyClass": "sr-only",
        // css classes for select-authenticator form
        "kcSelectAuthListClass": "list-group list-view-pf",
        "kcSelectAuthListItemClass": "list-group-item list-view-pf-stacked",
        "kcSelectAuthListItemFillClass": "pf-l-split__item pf-m-fill",
        "kcSelectAuthListItemIconPropertyClass": "fa-2x select-auth-box-icon-properties",
        "kcSelectAuthListItemIconClass": "pf-l-split__item select-auth-box-icon",
        "kcSelectAuthListItemTitle": "select-auth-box-paragraph",
        "kcSelectAuthListItemInfoClass": "list-view-pf-main-info",
        "kcSelectAuthListItemLeftClass": "list-view-pf-left",
        "kcSelectAuthListItemBodyClass": "list-view-pf-body",
        "kcSelectAuthListItemDescriptionClass": "list-view-pf-description",
        "kcSelectAuthListItemHeadingClass": "list-group-item-heading",
        "kcSelectAuthListItemHelpTextClass": "list-group-item-text",
        // css classes for the authenticators
        "kcAuthenticatorDefaultClass": "fa list-view-pf-icon-lg",
        "kcAuthenticatorPasswordClass": "fa fa-unlock list-view-pf-icon-lg",
        "kcAuthenticatorOTPClass": "fa fa-mobile list-view-pf-icon-lg",
        "kcAuthenticatorWebAuthnClass": "fa fa-key list-view-pf-icon-lg",
        "kcAuthenticatorWebAuthnPasswordlessClass": "fa fa-key list-view-pf-icon-lg",
        //css classes for the OTP Login Form
        "kcSelectOTPListClass": "card-pf card-pf-view card-pf-view-select card-pf-view-single-select",
        "kcSelectOTPListItemClass": "card-pf-body card-pf-top-element",
        "kcAuthenticatorOtpCircleClass": "fa fa-mobile card-pf-icon-circle",
        "kcSelectOTPItemHeadingClass": "card-pf-title text-center",
        "kcFormOptionsWrapperClass": undefined
    }
});
//# sourceMappingURL=useGetClassName.js.map

/***/ }),

/***/ "./node_modules/keycloakify/login/pages/LoginUsername.js":
/*!***************************************************************!*\
  !*** ./node_modules/keycloakify/login/pages/LoginUsername.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LoginUsername)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tools_clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tools/clsx */ "./node_modules/keycloakify/tools/clsx.js");
/* harmony import */ var _tools_useConstCallback__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../tools/useConstCallback */ "./node_modules/keycloakify/tools/useConstCallback.js");
/* harmony import */ var _login_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../login/lib/useGetClassName */ "./node_modules/keycloakify/login/lib/useGetClassName.js");





function LoginUsername(props) {
    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;
    const { getClassName } = (0,_login_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_4__.useGetClassName)({
        doUseDefaultCss,
        classes
    });
    const { social, realm, url, usernameHidden, login, registrationDisabled } = kcContext;
    const { msg, msgStr } = i18n;
    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const onSubmit = (0,_tools_useConstCallback__WEBPACK_IMPORTED_MODULE_3__.useConstCallback)(e => {
        var _a;
        e.preventDefault();
        setIsLoginButtonDisabled(true);
        const formElement = e.target;
        //NOTE: Even if we login with email Keycloak expect username and password in
        //the POST request.
        (_a = formElement.querySelector("input[name='email']")) === null || _a === void 0 ? void 0 : _a.setAttribute("name", "username");
        formElement.submit();
    });
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Template, Object.assign({}, { kcContext, i18n, doUseDefaultCss, classes }, { displayInfo: social.displayInfo, displayWide: realm.password && social.providers !== undefined, headerNode: msg("doLogIn"), infoNode: realm.password &&
            realm.registrationAllowed &&
            !registrationDisabled && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-registration" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span", { children: [msg("noAccount"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a", Object.assign({ tabIndex: 6, href: url.registrationUrl }, { children: msg("doRegister") }))] }) }))) }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ id: "kc-form", className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(realm.password && social.providers !== undefined && getClassName("kcContentWrapperClass")) }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-form-wrapper", className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(realm.password &&
                        social.providers && [getClassName("kcFormSocialAccountContentClass"), getClassName("kcFormSocialAccountClass")]) }, { children: realm.password && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("form", Object.assign({ id: "kc-form-login", onSubmit: onSubmit, action: url.loginAction, method: "post" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: getClassName("kcFormGroupClass") }, { children: !usernameHidden &&
                                    (() => {
                                        var _a;
                                        const label = !realm.loginWithEmailAllowed
                                            ? "username"
                                            : realm.registrationEmailAsUsername
                                                ? "email"
                                                : "usernameOrEmail";
                                        const autoCompleteHelper = label === "usernameOrEmail" ? "username" : label;
                                        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label", Object.assign({ htmlFor: autoCompleteHelper, className: getClassName("kcLabelClass") }, { children: msg(label) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { tabIndex: 1, id: autoCompleteHelper, className: getClassName("kcInputClass"), 
                                                    //NOTE: This is used by Google Chrome auto fill so we use it to tell
                                                    //the browser how to pre fill the form but before submit we put it back
                                                    //to username because it is what keycloak expects.
                                                    name: autoCompleteHelper, defaultValue: (_a = login.username) !== null && _a !== void 0 ? _a : "", type: "text", autoFocus: true, autoComplete: "off" })] }));
                                    })() })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(getClassName("kcFormGroupClass"), getClassName("kcFormSettingClass")) }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-form-options" }, { children: realm.rememberMe && !usernameHidden && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "checkbox" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label", { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", Object.assign({ tabIndex: 3, id: "rememberMe", name: "rememberMe", type: "checkbox" }, (login.rememberMe === "on"
                                                    ? {
                                                        "checked": true
                                                    }
                                                    : {}))), msg("rememberMe")] }) }))) })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-form-buttons", className: getClassName("kcFormGroupClass") }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { tabIndex: 4, className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(getClassName("kcButtonClass"), getClassName("kcButtonPrimaryClass"), getClassName("kcButtonBlockClass"), getClassName("kcButtonLargeClass")), name: "login", id: "kc-login", type: "submit", value: msgStr("doLogIn"), disabled: isLoginButtonDisabled }) }))] }))) })), realm.password && social.providers !== undefined && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-social-providers", className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(getClassName("kcFormSocialAccountContentClass"), getClassName("kcFormSocialAccountClass")) }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul", Object.assign({ className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(getClassName("kcFormSocialAccountListClass"), social.providers.length > 4 && getClassName("kcFormSocialAccountDoubleListClass")) }, { children: social.providers.map(p => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li", Object.assign({ className: getClassName("kcFormSocialAccountListLinkClass") }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a", Object.assign({ href: p.loginUrl, id: `zocial-${p.alias}`, className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)("zocial", p.providerId) }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span", { children: p.displayName }) })) }), p.providerId))) })) })))] })) })));
}
//# sourceMappingURL=LoginUsername.js.map

/***/ }),

/***/ "./node_modules/keycloakify/tools/clsx.js":
/*!************************************************!*\
  !*** ./node_modules/keycloakify/tools/clsx.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx)
/* harmony export */ });
/* harmony import */ var tsafe_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tsafe/assert */ "./node_modules/tsafe/esm/assert.mjs");
/* harmony import */ var tsafe_typeGuard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tsafe/typeGuard */ "./node_modules/tsafe/esm/typeGuard.mjs");


const clsx = (...args) => {
    const len = args.length;
    let i = 0;
    let cls = "";
    for (; i < len; i++) {
        const arg = args[i];
        if (arg == null)
            continue;
        let toAdd;
        switch (typeof arg) {
            case "boolean":
                break;
            case "object": {
                if (Array.isArray(arg)) {
                    toAdd = clsx(...arg);
                }
                else {
                    (0,tsafe_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(!(0,tsafe_typeGuard__WEBPACK_IMPORTED_MODULE_1__.typeGuard)(arg, false));
                    toAdd = "";
                    for (const k in arg) {
                        if (arg[k] && k) {
                            toAdd && (toAdd += " ");
                            toAdd += k;
                        }
                    }
                }
                break;
            }
            default: {
                toAdd = arg;
            }
        }
        if (toAdd) {
            cls && (cls += " ");
            cls += toAdd;
        }
    }
    return cls;
};
//# sourceMappingURL=clsx.js.map

/***/ }),

/***/ "./node_modules/tsafe/esm/typeGuard.mjs":
/*!**********************************************!*\
  !*** ./node_modules/tsafe/esm/typeGuard.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   typeGuard: () => (/* binding */ typeGuard)
/* harmony export */ });
/* eslint-disable @typescript-eslint/no-namespace */
/* eslint-disable @typescript-eslint/no-explicit-any */
/** https://docs.tsafe.dev/typeguard */
function typeGuard(_value, isMatched) {
    return isMatched;
}
//# sourceMappingURL=typeGuard.mjs.map

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_keycloakify_login_pages_LoginUsername_js.iframe.bundle.js.map