"use strict";
(globalThis["webpackChunkkeycloakify_starter"] = globalThis["webpackChunkkeycloakify_starter"] || []).push([["node_modules_keycloakify_account_pages_Password_js"],{

/***/ "./node_modules/keycloakify/account/lib/useGetClassName.js":
/*!*****************************************************************!*\
  !*** ./node_modules/keycloakify/account/lib/useGetClassName.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useGetClassName: () => (/* binding */ useGetClassName)
/* harmony export */ });
/* harmony import */ var _lib_useGetClassName__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/useGetClassName */ "./node_modules/keycloakify/lib/useGetClassName.js");

const { useGetClassName } = (0,_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_0__.createUseClassName)({
    "defaultClasses": {
        "kcBodyClass": undefined,
        "kcButtonClass": "btn",
        "kcButtonPrimaryClass": "btn-primary",
        "kcButtonLargeClass": "btn-lg",
        "kcButtonDefaultClass": "btn-default"
    }
});
//# sourceMappingURL=useGetClassName.js.map

/***/ }),

/***/ "./node_modules/keycloakify/account/pages/Password.js":
/*!************************************************************!*\
  !*** ./node_modules/keycloakify/account/pages/Password.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Password)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tools_clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tools/clsx */ "./node_modules/keycloakify/tools/clsx.js");
/* harmony import */ var _account_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../account/lib/useGetClassName */ "./node_modules/keycloakify/account/lib/useGetClassName.js");




function Password(props) {
    var _a;
    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;
    const { getClassName } = (0,_account_lib_useGetClassName__WEBPACK_IMPORTED_MODULE_3__.useGetClassName)({
        doUseDefaultCss,
        "classes": Object.assign(Object.assign({}, classes), { "kcBodyClass": (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(classes === null || classes === void 0 ? void 0 : classes.kcBodyClass, "password") })
    });
    const { url, password, account, stateChecker } = kcContext;
    const { msgStr, msg } = i18n;
    const [currentPassword, setCurrentPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    const [newPassword, setNewPassword] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    const [newPasswordConfirm, setNewPasswordConfirm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    const [newPasswordError, setNewPasswordError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    const [newPasswordConfirmError, setNewPasswordConfirmError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    const [hasNewPasswordBlurred, setHasNewPasswordBlurred] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [hasNewPasswordConfirmBlurred, setHasNewPasswordConfirmBlurred] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const checkNewPassword = (newPassword) => {
        if (!password.passwordSet) {
            return;
        }
        if (newPassword === currentPassword) {
            setNewPasswordError(msgStr("newPasswordSameAsOld"));
        }
        else {
            setNewPasswordError("");
        }
    };
    const checkNewPasswordConfirm = (newPasswordConfirm) => {
        if (newPasswordConfirm === "") {
            return;
        }
        if (newPassword !== newPasswordConfirm) {
            setNewPasswordConfirmError(msgStr("passwordConfirmNotMatch"));
        }
        else {
            setNewPasswordConfirmError("");
        }
    };
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Template, Object.assign({}, {
        kcContext: Object.assign(Object.assign({}, kcContext), { "message": (() => {
                if (newPasswordError !== "") {
                    return {
                        "type": "error",
                        "summary": newPasswordError
                    };
                }
                if (newPasswordConfirmError !== "") {
                    return {
                        "type": "error",
                        "summary": newPasswordConfirmError
                    };
                }
                return kcContext.message;
            })() }),
        i18n,
        doUseDefaultCss,
        classes
    }, { active: "password" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "row" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-md-10" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2", { children: msg("changePasswordHtmlTitle") }) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-md-2 subtitle" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span", Object.assign({ className: "subtitle" }, { children: msg("allFieldsRequired") })) }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("form", Object.assign({ action: url.passwordUrl, className: "form-horizontal", method: "post" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { type: "text", id: "username", name: "username", value: (_a = account.username) !== null && _a !== void 0 ? _a : "", autoComplete: "username", readOnly: true, style: { "display": "none" } }), password.passwordSet && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "form-group" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-2 col-md-2" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label", Object.assign({ htmlFor: "password", className: "control-label" }, { children: msg("password") })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-10 col-md-10" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { type: "password", className: "form-control", id: "password", name: "password", autoFocus: true, autoComplete: "current-password", value: currentPassword, onChange: event => setCurrentPassword(event.target.value) }) }))] }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { type: "hidden", id: "stateChecker", name: "stateChecker", value: stateChecker }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "form-group" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-2 col-md-2" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label", Object.assign({ htmlFor: "password-new", className: "control-label" }, { children: msg("passwordNew") })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-10 col-md-10" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { type: "password", className: "form-control", id: "password-new", name: "password-new", autoComplete: "new-password", value: newPassword, onChange: event => {
                                        const newPassword = event.target.value;
                                        setNewPassword(newPassword);
                                        if (hasNewPasswordBlurred) {
                                            checkNewPassword(newPassword);
                                        }
                                    }, onBlur: () => {
                                        setHasNewPasswordBlurred(true);
                                        checkNewPassword(newPassword);
                                    } }) }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", Object.assign({ className: "form-group" }, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-2 col-md-2" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label", Object.assign({ htmlFor: "password-confirm", className: "control-label two-lines" }, { children: msg("passwordConfirm") })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "col-sm-10 col-md-10" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", { type: "password", className: "form-control", id: "password-confirm", name: "password-confirm", autoComplete: "new-password", value: newPasswordConfirm, onChange: event => {
                                        const newPasswordConfirm = event.target.value;
                                        setNewPasswordConfirm(newPasswordConfirm);
                                        if (hasNewPasswordConfirmBlurred) {
                                            checkNewPasswordConfirm(newPasswordConfirm);
                                        }
                                    }, onBlur: () => {
                                        setHasNewPasswordConfirmBlurred(true);
                                        checkNewPasswordConfirm(newPasswordConfirm);
                                    } }) }))] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ className: "form-group" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", Object.assign({ id: "kc-form-buttons", className: "col-md-offset-2 col-md-10 submit" }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button", Object.assign({ disabled: newPasswordError !== "" || newPasswordConfirmError !== "", type: "submit", className: (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(getClassName("kcButtonClass"), getClassName("kcButtonPrimaryClass"), getClassName("kcButtonLargeClass")), name: "submitAction", value: "Save" }, { children: msg("doSave") })) }) })) }))] }))] })));
}
//# sourceMappingURL=Password.js.map

/***/ }),

/***/ "./node_modules/keycloakify/lib/useGetClassName.js":
/*!*********************************************************!*\
  !*** ./node_modules/keycloakify/lib/useGetClassName.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createUseClassName: () => (/* binding */ createUseClassName)
/* harmony export */ });
/* harmony import */ var _tools_clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools/clsx */ "./node_modules/keycloakify/tools/clsx.js");
/* harmony import */ var _tools_useConstCallback__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/useConstCallback */ "./node_modules/keycloakify/tools/useConstCallback.js");


function createUseClassName(params) {
    const { defaultClasses } = params;
    function useGetClassName(params) {
        const { classes } = params;
        const getClassName = (0,_tools_useConstCallback__WEBPACK_IMPORTED_MODULE_1__.useConstCallback)((classKey) => {
            return (0,_tools_clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(classKey, defaultClasses[classKey], classes === null || classes === void 0 ? void 0 : classes[classKey]);
        });
        return { getClassName };
    }
    return { useGetClassName };
}
//# sourceMappingURL=useGetClassName.js.map

/***/ }),

/***/ "./node_modules/keycloakify/tools/clsx.js":
/*!************************************************!*\
  !*** ./node_modules/keycloakify/tools/clsx.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx)
/* harmony export */ });
/* harmony import */ var tsafe_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tsafe/assert */ "./node_modules/tsafe/esm/assert.mjs");
/* harmony import */ var tsafe_typeGuard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tsafe/typeGuard */ "./node_modules/tsafe/esm/typeGuard.mjs");


const clsx = (...args) => {
    const len = args.length;
    let i = 0;
    let cls = "";
    for (; i < len; i++) {
        const arg = args[i];
        if (arg == null)
            continue;
        let toAdd;
        switch (typeof arg) {
            case "boolean":
                break;
            case "object": {
                if (Array.isArray(arg)) {
                    toAdd = clsx(...arg);
                }
                else {
                    (0,tsafe_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(!(0,tsafe_typeGuard__WEBPACK_IMPORTED_MODULE_1__.typeGuard)(arg, false));
                    toAdd = "";
                    for (const k in arg) {
                        if (arg[k] && k) {
                            toAdd && (toAdd += " ");
                            toAdd += k;
                        }
                    }
                }
                break;
            }
            default: {
                toAdd = arg;
            }
        }
        if (toAdd) {
            cls && (cls += " ");
            cls += toAdd;
        }
    }
    return cls;
};
//# sourceMappingURL=clsx.js.map

/***/ }),

/***/ "./node_modules/tsafe/esm/typeGuard.mjs":
/*!**********************************************!*\
  !*** ./node_modules/tsafe/esm/typeGuard.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   typeGuard: () => (/* binding */ typeGuard)
/* harmony export */ });
/* eslint-disable @typescript-eslint/no-namespace */
/* eslint-disable @typescript-eslint/no-explicit-any */
/** https://docs.tsafe.dev/typeguard */
function typeGuard(_value, isMatched) {
    return isMatched;
}
//# sourceMappingURL=typeGuard.mjs.map

/***/ })

}]);
//# sourceMappingURL=node_modules_keycloakify_account_pages_Password_js.iframe.bundle.js.map