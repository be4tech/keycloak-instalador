"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTheme = void 0;
var transformCodebase_1 = require("../../tools/transformCodebase");
var fs = __importStar(require("fs"));
var path_1 = require("path");
var replaceImportsFromStaticInJsCode_1 = require("../replacers/replaceImportsFromStaticInJsCode");
var replaceImportsInCssCode_1 = require("../replacers/replaceImportsInCssCode");
var generateFtl_1 = require("../generateFtl");
var mockTestingResourcesPath_1 = require("../../mockTestingResourcesPath");
var isInside_1 = require("../../tools/isInside");
var assert_1 = require("tsafe/assert");
var downloadKeycloakStaticResources_1 = require("./downloadKeycloakStaticResources");
var readFieldNameUsage_1 = require("./readFieldNameUsage");
var readExtraPageNames_1 = require("./readExtraPageNames");
(0, assert_1.assert)();
function generateTheme(params) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var reactAppBuildDirPath, keycloakThemeBuildingDirPath, themeSrcDirPath, keycloakifySrcDirPath, buildOptions, keycloakifyVersion, getThemeDirPath, allCssGlobalsToDefine, generateFtlFilesCode_glob, _loop_1, themeTypes_1, themeTypes_1_1, themeType, e_1_1, emailThemeSrcDirPath;
        var e_1, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    reactAppBuildDirPath = params.reactAppBuildDirPath, keycloakThemeBuildingDirPath = params.keycloakThemeBuildingDirPath, themeSrcDirPath = params.themeSrcDirPath, keycloakifySrcDirPath = params.keycloakifySrcDirPath, buildOptions = params.buildOptions, keycloakifyVersion = params.keycloakifyVersion;
                    getThemeDirPath = function (themeType) {
                        return (0, path_1.join)(keycloakThemeBuildingDirPath, "src", "main", "resources", "theme", buildOptions.themeName, themeType);
                    };
                    allCssGlobalsToDefine = {};
                    generateFtlFilesCode_glob = undefined;
                    _loop_1 = function (themeType) {
                        var themeDirPath, isFirstPass_1, generateFtlFilesCode, keycloakDirInPublicDir;
                        return __generator(this, function (_d) {
                            switch (_d.label) {
                                case 0:
                                    if (!fs.existsSync((0, path_1.join)(themeSrcDirPath, themeType))) {
                                        return [2 /*return*/, "continue"];
                                    }
                                    themeDirPath = getThemeDirPath(themeType);
                                    copy_app_resources_to_theme_path: {
                                        isFirstPass_1 = themeType.indexOf(themeType) === 0;
                                        if (!isFirstPass_1 && !buildOptions.isStandalone) {
                                            break copy_app_resources_to_theme_path;
                                        }
                                        (0, transformCodebase_1.transformCodebase)({
                                            "destDirPath": buildOptions.isStandalone ? (0, path_1.join)(themeDirPath, "resources", "build") : reactAppBuildDirPath,
                                            "srcDirPath": reactAppBuildDirPath,
                                            "transformSourceCode": function (_a) {
                                                var filePath = _a.filePath, sourceCode = _a.sourceCode;
                                                //NOTE: Prevent cycles, excludes the folder we generated for debug in public/
                                                if (buildOptions.isStandalone &&
                                                    (0, isInside_1.isInside)({
                                                        "dirPath": (0, path_1.join)(reactAppBuildDirPath, mockTestingResourcesPath_1.basenameOfKeycloakDirInPublicDir),
                                                        filePath: filePath
                                                    })) {
                                                    return undefined;
                                                }
                                                if (/\.css?$/i.test(filePath)) {
                                                    if (!buildOptions.isStandalone) {
                                                        return undefined;
                                                    }
                                                    var _b = (0, replaceImportsInCssCode_1.replaceImportsInCssCode)({
                                                        "cssCode": sourceCode.toString("utf8")
                                                    }), cssGlobalsToDefine = _b.cssGlobalsToDefine, fixedCssCode = _b.fixedCssCode;
                                                    register_css_variables: {
                                                        if (!isFirstPass_1) {
                                                            break register_css_variables;
                                                        }
                                                        allCssGlobalsToDefine = __assign(__assign({}, allCssGlobalsToDefine), cssGlobalsToDefine);
                                                    }
                                                    return { "modifiedSourceCode": Buffer.from(fixedCssCode, "utf8") };
                                                }
                                                if (/\.js?$/i.test(filePath)) {
                                                    if (!buildOptions.isStandalone && buildOptions.areAppAndKeycloakServerSharingSameDomain) {
                                                        return undefined;
                                                    }
                                                    var fixedJsCode = (0, replaceImportsFromStaticInJsCode_1.replaceImportsFromStaticInJsCode)({
                                                        "jsCode": sourceCode.toString("utf8"),
                                                        buildOptions: buildOptions
                                                    }).fixedJsCode;
                                                    return { "modifiedSourceCode": Buffer.from(fixedJsCode, "utf8") };
                                                }
                                                return buildOptions.isStandalone ? { "modifiedSourceCode": sourceCode } : undefined;
                                            }
                                        });
                                    }
                                    generateFtlFilesCode = generateFtlFilesCode_glob !== undefined
                                        ? generateFtlFilesCode_glob
                                        : (0, generateFtl_1.generateFtlFilesCodeFactory)({
                                            "indexHtmlCode": fs.readFileSync((0, path_1.join)(reactAppBuildDirPath, "index.html")).toString("utf8"),
                                            "cssGlobalsToDefine": allCssGlobalsToDefine,
                                            buildOptions: buildOptions,
                                            keycloakifyVersion: keycloakifyVersion,
                                            themeType: themeType,
                                            "fieldNames": (0, readFieldNameUsage_1.readFieldNameUsage)({
                                                keycloakifySrcDirPath: keycloakifySrcDirPath,
                                                themeSrcDirPath: themeSrcDirPath,
                                                themeType: themeType
                                            })
                                        }).generateFtlFilesCode;
                                    __spreadArray(__spreadArray([], __read((function () {
                                        switch (themeType) {
                                            case "login":
                                                return generateFtl_1.loginThemePageIds;
                                            case "account":
                                                return generateFtl_1.accountThemePageIds;
                                        }
                                    })()), false), __read((0, readExtraPageNames_1.readExtraPagesNames)({
                                        themeType: themeType,
                                        themeSrcDirPath: themeSrcDirPath
                                    })), false).forEach(function (pageId) {
                                        var ftlCode = generateFtlFilesCode({ pageId: pageId }).ftlCode;
                                        fs.mkdirSync(themeDirPath, { "recursive": true });
                                        fs.writeFileSync((0, path_1.join)(themeDirPath, pageId), Buffer.from(ftlCode, "utf8"));
                                    });
                                    keycloakDirInPublicDir = (0, path_1.join)(reactAppBuildDirPath, "..", "public", mockTestingResourcesPath_1.basenameOfKeycloakDirInPublicDir);
                                    if (fs.existsSync(keycloakDirInPublicDir)) {
                                        return [3 /*break*/, 2];
                                    }
                                    return [4 /*yield*/, (0, downloadKeycloakStaticResources_1.downloadKeycloakStaticResources)({
                                            "isSilent": buildOptions.isSilent,
                                            "keycloakVersion": buildOptions.keycloakVersionDefaultAssets,
                                            "themeDirPath": keycloakDirInPublicDir,
                                            themeType: themeType
                                        })];
                                case 1:
                                    _d.sent();
                                    if (themeType !== generateFtl_1.themeTypes[0]) {
                                        return [3 /*break*/, 2];
                                    }
                                    fs.writeFileSync((0, path_1.join)(keycloakDirInPublicDir, "README.txt"), Buffer.from(
                                    // prettier-ignore
                                    [
                                        "This is just a test folder that helps develop",
                                        "the login and register page without having to run a Keycloak container"
                                    ].join(" ")));
                                    fs.writeFileSync((0, path_1.join)(keycloakDirInPublicDir, ".gitignore"), Buffer.from("*", "utf8"));
                                    _d.label = 2;
                                case 2: return [4 /*yield*/, (0, downloadKeycloakStaticResources_1.downloadKeycloakStaticResources)({
                                        "isSilent": buildOptions.isSilent,
                                        "keycloakVersion": buildOptions.keycloakVersionDefaultAssets,
                                        themeDirPath: themeDirPath,
                                        themeType: themeType
                                    })];
                                case 3:
                                    _d.sent();
                                    fs.writeFileSync((0, path_1.join)(themeDirPath, "theme.properties"), Buffer.from(__spreadArray(["parent=keycloak"], __read(((_a = buildOptions.extraThemeProperties) !== null && _a !== void 0 ? _a : [])), false).join("\n\n"), "utf8"));
                                    return [2 /*return*/];
                            }
                        });
                    };
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 6, 7, 8]);
                    themeTypes_1 = __values(generateFtl_1.themeTypes), themeTypes_1_1 = themeTypes_1.next();
                    _c.label = 2;
                case 2:
                    if (!!themeTypes_1_1.done) return [3 /*break*/, 5];
                    themeType = themeTypes_1_1.value;
                    return [5 /*yield**/, _loop_1(themeType)];
                case 3:
                    _c.sent();
                    _c.label = 4;
                case 4:
                    themeTypes_1_1 = themeTypes_1.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (themeTypes_1_1 && !themeTypes_1_1.done && (_b = themeTypes_1.return)) _b.call(themeTypes_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8:
                    email: {
                        emailThemeSrcDirPath = (0, path_1.join)(themeSrcDirPath, "email");
                        if (!fs.existsSync(emailThemeSrcDirPath)) {
                            break email;
                        }
                        (0, transformCodebase_1.transformCodebase)({
                            "srcDirPath": emailThemeSrcDirPath,
                            "destDirPath": getThemeDirPath("email")
                        });
                    }
                    return [2 /*return*/];
            }
        });
    });
}
exports.generateTheme = generateTheme;
//# sourceMappingURL=generateTheme.js.map