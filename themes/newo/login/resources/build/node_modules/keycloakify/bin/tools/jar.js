"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.jarStream = void 0;
var path_1 = require("path");
var fs_1 = require("fs");
var walk_1 = __importDefault(require("./walk"));
var yazl_1 = require("yazl");
var promises_1 = require("fs/promises");
var trimIndent_1 = __importDefault(require("./trimIndent"));
function jarStream(_a) {
    var _b, e_1, _c, _d;
    var groupId = _a.groupId, artifactId = _a.artifactId, version = _a.version, asyncPathGeneratorFn = _a.asyncPathGeneratorFn;
    return __awaiter(this, void 0, void 0, function () {
        var manifestPath, manifestData, pomPropsPath, pomPropsData, zipFile, _e, _f, _g, entry, e_1_1;
        return __generator(this, function (_h) {
            switch (_h.label) {
                case 0:
                    manifestPath = "META-INF/MANIFEST.MF";
                    manifestData = Buffer.from((0, trimIndent_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n            Manifest-Version: 1.0\n            Archiver-Version: Plexus Archiver\n            Created-By: Keycloakify\n            Built-By: unknown\n            Build-Jdk: 19.0.0\n            "], ["\n            Manifest-Version: 1.0\n            Archiver-Version: Plexus Archiver\n            Created-By: Keycloakify\n            Built-By: unknown\n            Build-Jdk: 19.0.0\n            "]))));
                    pomPropsPath = "META-INF/maven/".concat(groupId, "/").concat(artifactId, "/pom.properties");
                    pomPropsData = Buffer.from((0, trimIndent_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n            # Generated by keycloakify\n            # ", "\n            artifactId=", "\n            groupId=", "\n            version=", "\n            "], ["\n            # Generated by keycloakify\n            # ", "\n            artifactId=", "\n            groupId=", "\n            version=", "\n            "])), new Date(), artifactId, groupId, version));
                    zipFile = new yazl_1.ZipFile();
                    _h.label = 1;
                case 1:
                    _h.trys.push([1, 6, 7, 12]);
                    _e = true, _f = __asyncValues(asyncPathGeneratorFn());
                    _h.label = 2;
                case 2: return [4 /*yield*/, _f.next()];
                case 3:
                    if (!(_g = _h.sent(), _b = _g.done, !_b)) return [3 /*break*/, 5];
                    _d = _g.value;
                    _e = false;
                    try {
                        entry = _d;
                        if ("buffer" in entry) {
                            zipFile.addBuffer(entry.buffer, entry.zipPath);
                        }
                        else if ("fsPath" in entry) {
                            if (entry.fsPath.endsWith(path_1.sep)) {
                                zipFile.addEmptyDirectory(entry.zipPath);
                            }
                            else {
                                zipFile.addFile(entry.fsPath, entry.zipPath);
                            }
                        }
                    }
                    finally {
                        _e = true;
                    }
                    _h.label = 4;
                case 4: return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 12];
                case 6:
                    e_1_1 = _h.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 12];
                case 7:
                    _h.trys.push([7, , 10, 11]);
                    if (!(!_e && !_b && (_c = _f.return))) return [3 /*break*/, 9];
                    return [4 /*yield*/, _c.call(_f)];
                case 8:
                    _h.sent();
                    _h.label = 9;
                case 9: return [3 /*break*/, 11];
                case 10:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 11: return [7 /*endfinally*/];
                case 12:
                    zipFile.addBuffer(manifestData, manifestPath);
                    zipFile.addBuffer(pomPropsData, pomPropsPath);
                    zipFile.end();
                    return [2 /*return*/, zipFile];
            }
        });
    });
}
exports.jarStream = jarStream;
/**
 * Create a jar archive, using the resources found at `rootPath` (a directory) and write the
 * archive to `targetPath` (a file). Use `groupId`, `artifactId` and `version` to define
 * the contents of the pom.properties file which is going to be added to the archive.
 * The root directory is expectedto have a conventional maven/gradle folder structure with a
 * single `pom.xml` file at the root and a `src/main/resources` directory containing all
 * application resources.
 */
function jar(_a) {
    var groupId = _a.groupId, artifactId = _a.artifactId, version = _a.version, rootPath = _a.rootPath, targetPath = _a.targetPath;
    return __awaiter(this, void 0, void 0, function () {
        var asyncPathGeneratorFn, zipFile;
        var _this = this;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, (0, promises_1.mkdir)((0, path_1.dirname)(targetPath), { recursive: true })];
                case 1:
                    _b.sent();
                    asyncPathGeneratorFn = function () {
                        return __asyncGenerator(this, arguments, function () {
                            var resourcesPath, _a, _b, _c, fsPath, zipPath, e_2_1;
                            var _d, e_2, _e, _f;
                            return __generator(this, function (_g) {
                                switch (_g.label) {
                                    case 0:
                                        resourcesPath = (0, path_1.join)(rootPath, "src", "main", "resources");
                                        _g.label = 1;
                                    case 1:
                                        _g.trys.push([1, 10, 11, 16]);
                                        _a = true, _b = __asyncValues((0, walk_1.default)(resourcesPath));
                                        _g.label = 2;
                                    case 2: return [4 /*yield*/, __await(_b.next())];
                                    case 3:
                                        if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 9];
                                        _f = _c.value;
                                        _a = false;
                                        _g.label = 4;
                                    case 4:
                                        _g.trys.push([4, , 7, 8]);
                                        fsPath = _f;
                                        zipPath = (0, path_1.relative)(resourcesPath, fsPath).split(path_1.sep).join("/");
                                        return [4 /*yield*/, __await({ fsPath: fsPath, zipPath: zipPath })];
                                    case 5: return [4 /*yield*/, _g.sent()];
                                    case 6:
                                        _g.sent();
                                        return [3 /*break*/, 8];
                                    case 7:
                                        _a = true;
                                        return [7 /*endfinally*/];
                                    case 8: return [3 /*break*/, 2];
                                    case 9: return [3 /*break*/, 16];
                                    case 10:
                                        e_2_1 = _g.sent();
                                        e_2 = { error: e_2_1 };
                                        return [3 /*break*/, 16];
                                    case 11:
                                        _g.trys.push([11, , 14, 15]);
                                        if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 13];
                                        return [4 /*yield*/, __await(_e.call(_b))];
                                    case 12:
                                        _g.sent();
                                        _g.label = 13;
                                    case 13: return [3 /*break*/, 15];
                                    case 14:
                                        if (e_2) throw e_2.error;
                                        return [7 /*endfinally*/];
                                    case 15: return [7 /*endfinally*/];
                                    case 16: return [4 /*yield*/, __await({
                                            fsPath: (0, path_1.join)(rootPath, "pom.xml"),
                                            zipPath: "META-INF/maven/".concat(groupId, "/").concat(artifactId, "/pom.xml")
                                        })];
                                    case 17: return [4 /*yield*/, _g.sent()];
                                    case 18:
                                        _g.sent();
                                        return [2 /*return*/];
                                }
                            });
                        });
                    };
                    return [4 /*yield*/, jarStream({ groupId: groupId, artifactId: artifactId, version: version, asyncPathGeneratorFn: asyncPathGeneratorFn })];
                case 2:
                    zipFile = _b.sent();
                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                zipFile.outputStream
                                    .pipe((0, fs_1.createWriteStream)(targetPath, { encoding: "binary" }))
                                    .on("close", function () { return resolve(); })
                                    .on("error", function (e) { return reject(e); });
                                return [2 /*return*/];
                            });
                        }); })];
                case 3:
                    _b.sent();
                    return [2 /*return*/];
            }
        });
    });
}
exports.default = jar;
var templateObject_1, templateObject_2;
//# sourceMappingURL=jar.js.map