"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateJavaStackFiles = void 0;
var fs = __importStar(require("fs"));
var path_1 = require("path");
var assert_1 = require("tsafe/assert");
var Reflect_1 = require("tsafe/Reflect");
{
    var buildOptions = (0, Reflect_1.Reflect)();
    (0, assert_1.assert)();
}
function generateJavaStackFiles(params) {
    var _a = params.buildOptions, groupId = _a.groupId, themeName = _a.themeName, extraThemeNames = _a.extraThemeNames, themeVersion = _a.themeVersion, artifactId = _a.artifactId, keycloakThemeBuildingDirPath = params.keycloakThemeBuildingDirPath, implementedThemeTypes = params.implementedThemeTypes;
    {
        var pomFileCode = (function generatePomFileCode() {
            var pomFileCode = [
                "<?xml version=\"1.0\"?>",
                "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
                "\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">",
                "\t<modelVersion>4.0.0</modelVersion>",
                "\t<groupId>".concat(groupId, "</groupId>"),
                "\t<artifactId>".concat(artifactId, "</artifactId>"),
                "\t<version>".concat(themeVersion, "</version>"),
                "\t<name>".concat(artifactId, "</name>"),
                "\t<description />",
                "</project>"
            ].join("\n");
            return { pomFileCode: pomFileCode };
        })().pomFileCode;
        fs.writeFileSync((0, path_1.join)(keycloakThemeBuildingDirPath, "pom.xml"), Buffer.from(pomFileCode, "utf8"));
    }
    {
        var themeManifestFilePath = (0, path_1.join)(keycloakThemeBuildingDirPath, "src", "main", "resources", "META-INF", "keycloak-themes.json");
        try {
            fs.mkdirSync((0, path_1.dirname)(themeManifestFilePath));
        }
        catch (_b) { }
        fs.writeFileSync(themeManifestFilePath, Buffer.from(JSON.stringify({
            "themes": __spreadArray([themeName], __read(extraThemeNames), false).map(function (themeName) { return ({
                "name": themeName,
                "types": Object.entries(implementedThemeTypes)
                    .filter(function (_a) {
                    var _b = __read(_a, 2), isImplemented = _b[1];
                    return isImplemented;
                })
                    .map(function (_a) {
                    var _b = __read(_a, 1), themeType = _b[0];
                    return themeType;
                })
            }); })
        }, null, 2), "utf8"));
    }
    return {
        "jarFilePath": (0, path_1.join)(keycloakThemeBuildingDirPath, "target", "".concat(artifactId, "-").concat(themeVersion, ".jar"))
    };
}
exports.generateJavaStackFiles = generateJavaStackFiles;
//# sourceMappingURL=generateJavaStackFiles.js.map