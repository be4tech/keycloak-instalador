{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function LoginResetPassword(props) {\n  const {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    Template,\n    classes\n  } = props;\n  const {\n    getClassName\n  } = useGetClassName({\n    doUseDefaultCss,\n    classes\n  });\n  const {\n    url,\n    realm,\n    auth\n  } = kcContext;\n  const {\n    msg,\n    msgStr\n  } = i18n;\n  return _jsx(Template, Object.assign({}, {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes\n  }, {\n    displayMessage: false,\n    headerNode: msg(\"emailForgotTitle\"),\n    infoNode: msg(\"emailInstruction\")\n  }, {\n    children: _jsxs(\"form\", Object.assign({\n      id: \"kc-reset-password-form\",\n      className: getClassName(\"kcFormClass\"),\n      action: url.loginAction,\n      method: \"post\"\n    }, {\n      children: [_jsxs(\"div\", Object.assign({\n        className: getClassName(\"kcFormGroupClass\")\n      }, {\n        children: [_jsx(\"div\", Object.assign({\n          className: getClassName(\"kcLabelWrapperClass\")\n        }, {\n          children: _jsx(\"label\", Object.assign({\n            htmlFor: \"username\",\n            className: getClassName(\"kcLabelClass\")\n          }, {\n            children: !realm.loginWithEmailAllowed ? msg(\"username\") : !realm.registrationEmailAsUsername ? msg(\"usernameOrEmail\") : msg(\"email\")\n          }))\n        })), _jsx(\"div\", Object.assign({\n          className: getClassName(\"kcInputWrapperClass\")\n        }, {\n          children: _jsx(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            className: getClassName(\"kcInputClass\"),\n            autoFocus: true,\n            defaultValue: auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined\n          })\n        }))]\n      })), _jsxs(\"div\", Object.assign({\n        className: clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))\n      }, {\n        children: [_jsx(\"div\", Object.assign({\n          id: \"kc-form-options\",\n          className: getClassName(\"kcFormOptionsClass\")\n        }, {\n          children: _jsx(\"div\", Object.assign({\n            className: getClassName(\"kcFormOptionsWrapperClass\")\n          }, {\n            children: _jsx(\"span\", {\n              children: _jsx(\"a\", Object.assign({\n                href: url.loginUrl\n              }, {\n                children: msg(\"backToLogin\")\n              }))\n            })\n          }))\n        })), _jsx(\"div\", Object.assign({\n          id: \"kc-form-buttons\",\n          className: getClassName(\"kcFormButtonsClass\")\n        }, {\n          children: _jsx(\"input\", {\n            className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")),\n            type: \"submit\",\n            value: msgStr(\"doSubmit\")\n          })\n        }))]\n      }))]\n    }))\n  }));\n}","map":{"version":3,"names":["clsx","useGetClassName","LoginResetPassword","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","url","realm","auth","msg","msgStr","_jsx","Object","assign","displayMessage","headerNode","infoNode","children","_jsxs","id","className","action","loginAction","method","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","type","name","autoFocus","defaultValue","undefined","showUsername","attemptedUsername","href","loginUrl","value"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/pages/LoginResetPassword.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, { pageId: \"login-reset-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, realm, auth } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            displayMessage={false}\n            headerNode={msg(\"emailForgotTitle\")}\n            infoNode={msg(\"emailInstruction\")}\n        >\n            <form id=\"kc-reset-password-form\" className={getClassName(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"username\" className={getClassName(\"kcLabelClass\")}>\n                            {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                ? msg(\"usernameOrEmail\")\n                                : msg(\"email\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            className={getClassName(\"kcInputClass\")}\n                            autoFocus\n                            defaultValue={auth !== undefined && auth.showUsername ? auth.attemptedUsername : undefined}\n                        />\n                    </div>\n                </div>\n                <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doSubmit\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}