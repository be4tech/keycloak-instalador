{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { clsx } from \"../../tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileFormFields\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function RegisterUserProfile(props) {\n  const {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    Template,\n    classes\n  } = props;\n  const {\n    getClassName\n  } = useGetClassName({\n    doUseDefaultCss,\n    classes\n  });\n  const {\n    url,\n    messagesPerField,\n    recaptchaRequired,\n    recaptchaSiteKey,\n    realm\n  } = kcContext;\n  realm.registrationEmailAsUsername;\n  const {\n    msg,\n    msgStr\n  } = i18n;\n  const [isFormSubmittable, setIsFormSubmittable] = useState(false);\n  return _jsx(Template, Object.assign({}, {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes\n  }, {\n    displayMessage: messagesPerField.exists(\"global\"),\n    displayRequiredFields: true,\n    headerNode: msg(\"registerTitle\")\n  }, {\n    children: _jsxs(\"form\", Object.assign({\n      id: \"kc-register-form\",\n      className: getClassName(\"kcFormClass\"),\n      action: url.registrationAction,\n      method: \"post\"\n    }, {\n      children: [_jsx(UserProfileFormFields, {\n        kcContext: kcContext,\n        onIsFormSubmittableValueChange: setIsFormSubmittable,\n        i18n: i18n,\n        getClassName: getClassName\n      }), recaptchaRequired && _jsx(\"div\", Object.assign({\n        className: \"form-group\"\n      }, {\n        children: _jsx(\"div\", Object.assign({\n          className: getClassName(\"kcInputWrapperClass\")\n        }, {\n          children: _jsx(\"div\", {\n            className: \"g-recaptcha\",\n            \"data-size\": \"compact\",\n            \"data-sitekey\": recaptchaSiteKey\n          })\n        }))\n      })), _jsxs(\"div\", Object.assign({\n        className: getClassName(\"kcFormGroupClass\"),\n        style: {\n          \"marginBottom\": 30\n        }\n      }, {\n        children: [_jsx(\"div\", Object.assign({\n          id: \"kc-form-options\",\n          className: getClassName(\"kcFormOptionsClass\")\n        }, {\n          children: _jsx(\"div\", Object.assign({\n            className: getClassName(\"kcFormOptionsWrapperClass\")\n          }, {\n            children: _jsx(\"span\", {\n              children: _jsx(\"a\", Object.assign({\n                href: url.loginUrl\n              }, {\n                children: msg(\"backToLogin\")\n              }))\n            })\n          }))\n        })), _jsx(\"div\", Object.assign({\n          id: \"kc-form-buttons\",\n          className: getClassName(\"kcFormButtonsClass\")\n        }, {\n          children: _jsx(\"input\", {\n            className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")),\n            type: \"submit\",\n            value: msgStr(\"doRegister\"),\n            disabled: !isFormSubmittable\n          })\n        }))]\n      }))]\n    }))\n  }));\n}","map":{"version":3,"names":["useState","clsx","UserProfileFormFields","useGetClassName","RegisterUserProfile","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","url","messagesPerField","recaptchaRequired","recaptchaSiteKey","realm","registrationEmailAsUsername","msg","msgStr","isFormSubmittable","setIsFormSubmittable","_jsx","Object","assign","displayMessage","exists","displayRequiredFields","headerNode","children","_jsxs","id","className","action","registrationAction","method","onIsFormSubmittableValueChange","style","href","loginUrl","type","value","disabled"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/pages/RegisterUserProfile.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileFormFields\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function RegisterUserProfile(props: PageProps<Extract<KcContext, { pageId: \"register-user-profile.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, recaptchaRequired, recaptchaSiteKey, realm } = kcContext;\n\n    realm.registrationEmailAsUsername;\n\n    const { msg, msgStr } = i18n;\n\n    const [isFormSubmittable, setIsFormSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            displayMessage={messagesPerField.exists(\"global\")}\n            displayRequiredFields={true}\n            headerNode={msg(\"registerTitle\")}\n        >\n            <form id=\"kc-register-form\" className={getClassName(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\n                <UserProfileFormFields\n                    kcContext={kcContext}\n                    onIsFormSubmittableValueChange={setIsFormSubmittable}\n                    i18n={i18n}\n                    getClassName={getClassName}\n                />\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey} />\n                        </div>\n                    </div>\n                )}\n                <div className={getClassName(\"kcFormGroupClass\")} style={{ \"marginBottom\": 30 }}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doRegister\")}\n                            disabled={!isFormSubmittable}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}