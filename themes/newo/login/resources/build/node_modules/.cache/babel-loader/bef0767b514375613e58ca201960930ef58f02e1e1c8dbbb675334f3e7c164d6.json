{"ast":null,"code":"var _jsxFileName = \"/Users/user/NewoDev/keycloakify-starter/src/keycloak-theme/login/pages/Login.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { createPageStory } from \\\"../createPageStory\\\";\\n\\nconst { PageStory } = createPageStory({\\n    pageId: \\\"login.ftl\\\"\\n});\\n\\nexport default {\\n    title: \\\"login/Login\\\",\\n    component: PageStory,\\n} as ComponentMeta<typeof PageStory>;\\n\\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;\\n\\nexport const WithoutPasswordField: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { password: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutRegistration: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { registrationAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutRememberMe: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { rememberMe: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutPasswordReset: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { resetPasswordAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithPresetUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: \\\"max.mustermann@mail.com\\\" }\\n        }}\\n    />\\n);\\n\\nexport const WithImmutablePresetUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: 'max.mustermann@mail.com' },\\n            usernameEditDisabled: true\\n        }}\\n    />\\n);\\n\\nexport const WithSocialProviders: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            social: {\\n                displayInfo: true, providers: [\\n                    { loginUrl: 'google', alias: 'google', providerId: 'google', displayName: 'Google' },\\n                    { loginUrl: 'microsoft', alias: 'microsoft', providerId: 'microsoft', displayName: 'Microsoft' },\\n                    { loginUrl: 'facebook', alias: 'facebook', providerId: 'facebook', displayName: 'Facebook' },\\n                    { loginUrl: 'instagram', alias: 'instagram', providerId: 'instagram', displayName: 'Instagram' },\\n                    { loginUrl: 'twitter', alias: 'twitter', providerId: 'twitter', displayName: 'Twitter' },\\n                    { loginUrl: 'linkedin', alias: 'linkedin', providerId: 'linkedin', displayName: 'LinkedIn' },\\n                    { loginUrl: 'stackoverflow', alias: 'stackoverflow', providerId: 'stackoverflow', displayName: 'Stackoverflow' },\\n                    { loginUrl: 'github', alias: 'github', providerId: 'github', displayName: 'Github' },\\n                    { loginUrl: 'gitlab', alias: 'gitlab', providerId: 'gitlab', displayName: 'Gitlab' },\\n                    { loginUrl: 'bitbucket', alias: 'bitbucket', providerId: 'bitbucket', displayName: 'Bitbucket' },\\n                    { loginUrl: 'paypal', alias: 'paypal', providerId: 'paypal', displayName: 'PayPal' },\\n                    { loginUrl: 'openshift', alias: 'openshift', providerId: 'openshift', displayName: 'OpenShift' },\\n\\n                ]\\n            }\\n        }}\\n    />\\n);\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 57,\n      \"line\": 13\n    },\n    \"endLoc\": {\n      \"col\": 76,\n      \"line\": 13\n    },\n    \"startBody\": {\n      \"col\": 57,\n      \"line\": 13\n    },\n    \"endBody\": {\n      \"col\": 76,\n      \"line\": 13\n    }\n  },\n  \"WithoutPasswordField\": {\n    \"startLoc\": {\n      \"col\": 70,\n      \"line\": 15\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 21\n    },\n    \"startBody\": {\n      \"col\": 70,\n      \"line\": 15\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 21\n    }\n  },\n  \"WithoutRegistration\": {\n    \"startLoc\": {\n      \"col\": 69,\n      \"line\": 23\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 29\n    },\n    \"startBody\": {\n      \"col\": 69,\n      \"line\": 23\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 29\n    }\n  },\n  \"WithoutRememberMe\": {\n    \"startLoc\": {\n      \"col\": 67,\n      \"line\": 31\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 37\n    },\n    \"startBody\": {\n      \"col\": 67,\n      \"line\": 31\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 37\n    }\n  },\n  \"WithoutPasswordReset\": {\n    \"startLoc\": {\n      \"col\": 70,\n      \"line\": 39\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 45\n    },\n    \"startBody\": {\n      \"col\": 70,\n      \"line\": 39\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 45\n    }\n  },\n  \"WithEmailAsUsername\": {\n    \"startLoc\": {\n      \"col\": 69,\n      \"line\": 47\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 53\n    },\n    \"startBody\": {\n      \"col\": 69,\n      \"line\": 47\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 53\n    }\n  },\n  \"WithPresetUsername\": {\n    \"startLoc\": {\n      \"col\": 68,\n      \"line\": 55\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 61\n    },\n    \"startBody\": {\n      \"col\": 68,\n      \"line\": 55\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 61\n    }\n  },\n  \"WithImmutablePresetUsername\": {\n    \"startLoc\": {\n      \"col\": 77,\n      \"line\": 63\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 70\n    },\n    \"startBody\": {\n      \"col\": 77,\n      \"line\": 63\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 70\n    }\n  },\n  \"WithSocialProviders\": {\n    \"startLoc\": {\n      \"col\": 69,\n      \"line\": 72\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 94\n    },\n    \"startBody\": {\n      \"col\": 69,\n      \"line\": 72\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 94\n    }\n  }\n};\nimport { createPageStory } from \"../createPageStory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PageStory\n} = createPageStory({\n  pageId: \"login.ftl\"\n});\nexport default {\n  title: \"login/Login\",\n  component: PageStory\n};\nexport const Default = () => /*#__PURE__*/_jsxDEV(PageStory, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 64\n}, this);\n_c = Default;\n;\nexport const WithoutPasswordField = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      password: false\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this);\n_c2 = WithoutPasswordField;\n;\nexport const WithoutRegistration = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      registrationAllowed: false\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this);\n_c3 = WithoutRegistration;\n;\nexport const WithoutRememberMe = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      rememberMe: false\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this);\n_c4 = WithoutRememberMe;\n;\nexport const WithoutPasswordReset = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      resetPasswordAllowed: false\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 5\n}, this);\n_c5 = WithoutPasswordReset;\n;\nexport const WithEmailAsUsername = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    realm: {\n      loginWithEmailAllowed: false\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 5\n}, this);\n_c6 = WithEmailAsUsername;\n;\nexport const WithPresetUsername = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    login: {\n      username: \"max.mustermann@mail.com\"\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 5\n}, this);\n_c7 = WithPresetUsername;\n;\nexport const WithImmutablePresetUsername = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    login: {\n      username: 'max.mustermann@mail.com'\n    },\n    usernameEditDisabled: true\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 5\n}, this);\n_c8 = WithImmutablePresetUsername;\n;\nexport const WithSocialProviders = () => /*#__PURE__*/_jsxDEV(PageStory, {\n  kcContext: {\n    social: {\n      displayInfo: true,\n      providers: [{\n        loginUrl: 'google',\n        alias: 'google',\n        providerId: 'google',\n        displayName: 'Google'\n      }, {\n        loginUrl: 'microsoft',\n        alias: 'microsoft',\n        providerId: 'microsoft',\n        displayName: 'Microsoft'\n      }, {\n        loginUrl: 'facebook',\n        alias: 'facebook',\n        providerId: 'facebook',\n        displayName: 'Facebook'\n      }, {\n        loginUrl: 'instagram',\n        alias: 'instagram',\n        providerId: 'instagram',\n        displayName: 'Instagram'\n      }, {\n        loginUrl: 'twitter',\n        alias: 'twitter',\n        providerId: 'twitter',\n        displayName: 'Twitter'\n      }, {\n        loginUrl: 'linkedin',\n        alias: 'linkedin',\n        providerId: 'linkedin',\n        displayName: 'LinkedIn'\n      }, {\n        loginUrl: 'stackoverflow',\n        alias: 'stackoverflow',\n        providerId: 'stackoverflow',\n        displayName: 'Stackoverflow'\n      }, {\n        loginUrl: 'github',\n        alias: 'github',\n        providerId: 'github',\n        displayName: 'Github'\n      }, {\n        loginUrl: 'gitlab',\n        alias: 'gitlab',\n        providerId: 'gitlab',\n        displayName: 'Gitlab'\n      }, {\n        loginUrl: 'bitbucket',\n        alias: 'bitbucket',\n        providerId: 'bitbucket',\n        displayName: 'Bitbucket'\n      }, {\n        loginUrl: 'paypal',\n        alias: 'paypal',\n        providerId: 'paypal',\n        displayName: 'PayPal'\n      }, {\n        loginUrl: 'openshift',\n        alias: 'openshift',\n        providerId: 'openshift',\n        displayName: 'OpenShift'\n      }]\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 81,\n  columnNumber: 5\n}, this);\n_c9 = WithSocialProviders;\nDefault.parameters = {\n  storySource: {\n    source: \"() => <PageStory />\"\n  },\n  ...Default.parameters\n};\nWithoutPasswordField.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { password: false }\\n        }}\\n    />\\n)\"\n  },\n  ...WithoutPasswordField.parameters\n};\nWithoutRegistration.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { registrationAllowed: false }\\n        }}\\n    />\\n)\"\n  },\n  ...WithoutRegistration.parameters\n};\nWithoutRememberMe.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { rememberMe: false }\\n        }}\\n    />\\n)\"\n  },\n  ...WithoutRememberMe.parameters\n};\nWithoutPasswordReset.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { resetPasswordAllowed: false }\\n        }}\\n    />\\n)\"\n  },\n  ...WithoutPasswordReset.parameters\n};\nWithEmailAsUsername.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: false }\\n        }}\\n    />\\n)\"\n  },\n  ...WithEmailAsUsername.parameters\n};\nWithPresetUsername.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: \\\"max.mustermann@mail.com\\\" }\\n        }}\\n    />\\n)\"\n  },\n  ...WithPresetUsername.parameters\n};\nWithImmutablePresetUsername.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: 'max.mustermann@mail.com' },\\n            usernameEditDisabled: true\\n        }}\\n    />\\n)\"\n  },\n  ...WithImmutablePresetUsername.parameters\n};\nWithSocialProviders.parameters = {\n  storySource: {\n    source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            social: {\\n                displayInfo: true, providers: [\\n                    { loginUrl: 'google', alias: 'google', providerId: 'google', displayName: 'Google' },\\n                    { loginUrl: 'microsoft', alias: 'microsoft', providerId: 'microsoft', displayName: 'Microsoft' },\\n                    { loginUrl: 'facebook', alias: 'facebook', providerId: 'facebook', displayName: 'Facebook' },\\n                    { loginUrl: 'instagram', alias: 'instagram', providerId: 'instagram', displayName: 'Instagram' },\\n                    { loginUrl: 'twitter', alias: 'twitter', providerId: 'twitter', displayName: 'Twitter' },\\n                    { loginUrl: 'linkedin', alias: 'linkedin', providerId: 'linkedin', displayName: 'LinkedIn' },\\n                    { loginUrl: 'stackoverflow', alias: 'stackoverflow', providerId: 'stackoverflow', displayName: 'Stackoverflow' },\\n                    { loginUrl: 'github', alias: 'github', providerId: 'github', displayName: 'Github' },\\n                    { loginUrl: 'gitlab', alias: 'gitlab', providerId: 'gitlab', displayName: 'Gitlab' },\\n                    { loginUrl: 'bitbucket', alias: 'bitbucket', providerId: 'bitbucket', displayName: 'Bitbucket' },\\n                    { loginUrl: 'paypal', alias: 'paypal', providerId: 'paypal', displayName: 'PayPal' },\\n                    { loginUrl: 'openshift', alias: 'openshift', providerId: 'openshift', displayName: 'OpenShift' },\\n\\n                ]\\n            }\\n        }}\\n    />\\n)\"\n  },\n  ...WithSocialProviders.parameters\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Default\");\n$RefreshReg$(_c2, \"WithoutPasswordField\");\n$RefreshReg$(_c3, \"WithoutRegistration\");\n$RefreshReg$(_c4, \"WithoutRememberMe\");\n$RefreshReg$(_c5, \"WithoutPasswordReset\");\n$RefreshReg$(_c6, \"WithEmailAsUsername\");\n$RefreshReg$(_c7, \"WithPresetUsername\");\n$RefreshReg$(_c8, \"WithImmutablePresetUsername\");\n$RefreshReg$(_c9, \"WithSocialProviders\");\nexport const __namedExportsOrder = [\"Default\", \"WithoutPasswordField\", \"WithoutRegistration\", \"WithoutRememberMe\", \"WithoutPasswordReset\", \"WithEmailAsUsername\", \"WithPresetUsername\", \"WithImmutablePresetUsername\", \"WithSocialProviders\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","createPageStory","jsxDEV","_jsxDEV","PageStory","pageId","title","component","Default","fileName","_jsxFileName","lineNumber","columnNumber","_c","WithoutPasswordField","kcContext","realm","password","_c2","WithoutRegistration","registrationAllowed","_c3","WithoutRememberMe","rememberMe","_c4","WithoutPasswordReset","resetPasswordAllowed","_c5","WithEmailAsUsername","loginWithEmailAllowed","_c6","WithPresetUsername","login","username","_c7","WithImmutablePresetUsername","usernameEditDisabled","_c8","WithSocialProviders","social","displayInfo","providers","loginUrl","alias","providerId","displayName","_c9","parameters","storySource","source","$RefreshReg$","__namedExportsOrder"],"sources":["/Users/user/NewoDev/keycloakify-starter/src/keycloak-theme/login/pages/Login.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { createPageStory } from \\\"../createPageStory\\\";\\n\\nconst { PageStory } = createPageStory({\\n    pageId: \\\"login.ftl\\\"\\n});\\n\\nexport default {\\n    title: \\\"login/Login\\\",\\n    component: PageStory,\\n} as ComponentMeta<typeof PageStory>;\\n\\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;\\n\\nexport const WithoutPasswordField: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { password: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutRegistration: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { registrationAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutRememberMe: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { rememberMe: false }\\n        }}\\n    />\\n);\\n\\nexport const WithoutPasswordReset: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { resetPasswordAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: false }\\n        }}\\n    />\\n);\\n\\nexport const WithPresetUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: \\\"max.mustermann@mail.com\\\" }\\n        }}\\n    />\\n);\\n\\nexport const WithImmutablePresetUsername: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: 'max.mustermann@mail.com' },\\n            usernameEditDisabled: true\\n        }}\\n    />\\n);\\n\\nexport const WithSocialProviders: ComponentStory<typeof PageStory> = () => (\\n    <PageStory\\n        kcContext={{\\n            social: {\\n                displayInfo: true, providers: [\\n                    { loginUrl: 'google', alias: 'google', providerId: 'google', displayName: 'Google' },\\n                    { loginUrl: 'microsoft', alias: 'microsoft', providerId: 'microsoft', displayName: 'Microsoft' },\\n                    { loginUrl: 'facebook', alias: 'facebook', providerId: 'facebook', displayName: 'Facebook' },\\n                    { loginUrl: 'instagram', alias: 'instagram', providerId: 'instagram', displayName: 'Instagram' },\\n                    { loginUrl: 'twitter', alias: 'twitter', providerId: 'twitter', displayName: 'Twitter' },\\n                    { loginUrl: 'linkedin', alias: 'linkedin', providerId: 'linkedin', displayName: 'LinkedIn' },\\n                    { loginUrl: 'stackoverflow', alias: 'stackoverflow', providerId: 'stackoverflow', displayName: 'Stackoverflow' },\\n                    { loginUrl: 'github', alias: 'github', providerId: 'github', displayName: 'Github' },\\n                    { loginUrl: 'gitlab', alias: 'gitlab', providerId: 'gitlab', displayName: 'Gitlab' },\\n                    { loginUrl: 'bitbucket', alias: 'bitbucket', providerId: 'bitbucket', displayName: 'Bitbucket' },\\n                    { loginUrl: 'paypal', alias: 'paypal', providerId: 'paypal', displayName: 'PayPal' },\\n                    { loginUrl: 'openshift', alias: 'openshift', providerId: 'openshift', displayName: 'OpenShift' },\\n\\n                ]\\n            }\\n        }}\\n    />\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":57,\"line\":13},\"endLoc\":{\"col\":76,\"line\":13},\"startBody\":{\"col\":57,\"line\":13},\"endBody\":{\"col\":76,\"line\":13}},\"WithoutPasswordField\":{\"startLoc\":{\"col\":70,\"line\":15},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":70,\"line\":15},\"endBody\":{\"col\":1,\"line\":21}},\"WithoutRegistration\":{\"startLoc\":{\"col\":69,\"line\":23},\"endLoc\":{\"col\":1,\"line\":29},\"startBody\":{\"col\":69,\"line\":23},\"endBody\":{\"col\":1,\"line\":29}},\"WithoutRememberMe\":{\"startLoc\":{\"col\":67,\"line\":31},\"endLoc\":{\"col\":1,\"line\":37},\"startBody\":{\"col\":67,\"line\":31},\"endBody\":{\"col\":1,\"line\":37}},\"WithoutPasswordReset\":{\"startLoc\":{\"col\":70,\"line\":39},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":70,\"line\":39},\"endBody\":{\"col\":1,\"line\":45}},\"WithEmailAsUsername\":{\"startLoc\":{\"col\":69,\"line\":47},\"endLoc\":{\"col\":1,\"line\":53},\"startBody\":{\"col\":69,\"line\":47},\"endBody\":{\"col\":1,\"line\":53}},\"WithPresetUsername\":{\"startLoc\":{\"col\":68,\"line\":55},\"endLoc\":{\"col\":1,\"line\":61},\"startBody\":{\"col\":68,\"line\":55},\"endBody\":{\"col\":1,\"line\":61}},\"WithImmutablePresetUsername\":{\"startLoc\":{\"col\":77,\"line\":63},\"endLoc\":{\"col\":1,\"line\":70},\"startBody\":{\"col\":77,\"line\":63},\"endBody\":{\"col\":1,\"line\":70}},\"WithSocialProviders\":{\"startLoc\":{\"col\":69,\"line\":72},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":69,\"line\":72},\"endBody\":{\"col\":1,\"line\":94}}};\n    \nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { createPageStory } from \"../createPageStory\";\n\nconst { PageStory } = createPageStory({\n    pageId: \"login.ftl\"\n});\n\nexport default {\n    title: \"login/Login\",\n    component: PageStory,\n} as ComponentMeta<typeof PageStory>;\n\nexport const Default: ComponentStory<typeof PageStory> = () => <PageStory />;;\n\nexport const WithoutPasswordField: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { password: false }\n        }}\n    />\n);;\n\nexport const WithoutRegistration: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { registrationAllowed: false }\n        }}\n    />\n);;\n\nexport const WithoutRememberMe: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { rememberMe: false }\n        }}\n    />\n);;\n\nexport const WithoutPasswordReset: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { resetPasswordAllowed: false }\n        }}\n    />\n);;\n\nexport const WithEmailAsUsername: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            realm: { loginWithEmailAllowed: false }\n        }}\n    />\n);;\n\nexport const WithPresetUsername: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            login: { username: \"max.mustermann@mail.com\" }\n        }}\n    />\n);;\n\nexport const WithImmutablePresetUsername: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            login: { username: 'max.mustermann@mail.com' },\n            usernameEditDisabled: true\n        }}\n    />\n);;\n\nexport const WithSocialProviders: ComponentStory<typeof PageStory> = () => (\n    <PageStory\n        kcContext={{\n            social: {\n                displayInfo: true, providers: [\n                    { loginUrl: 'google', alias: 'google', providerId: 'google', displayName: 'Google' },\n                    { loginUrl: 'microsoft', alias: 'microsoft', providerId: 'microsoft', displayName: 'Microsoft' },\n                    { loginUrl: 'facebook', alias: 'facebook', providerId: 'facebook', displayName: 'Facebook' },\n                    { loginUrl: 'instagram', alias: 'instagram', providerId: 'instagram', displayName: 'Instagram' },\n                    { loginUrl: 'twitter', alias: 'twitter', providerId: 'twitter', displayName: 'Twitter' },\n                    { loginUrl: 'linkedin', alias: 'linkedin', providerId: 'linkedin', displayName: 'LinkedIn' },\n                    { loginUrl: 'stackoverflow', alias: 'stackoverflow', providerId: 'stackoverflow', displayName: 'Stackoverflow' },\n                    { loginUrl: 'github', alias: 'github', providerId: 'github', displayName: 'Github' },\n                    { loginUrl: 'gitlab', alias: 'gitlab', providerId: 'gitlab', displayName: 'Gitlab' },\n                    { loginUrl: 'bitbucket', alias: 'bitbucket', providerId: 'bitbucket', displayName: 'Bitbucket' },\n                    { loginUrl: 'paypal', alias: 'paypal', providerId: 'paypal', displayName: 'PayPal' },\n                    { loginUrl: 'openshift', alias: 'openshift', providerId: 'openshift', displayName: 'OpenShift' },\n\n                ]\n            }\n        }}\n    />\n);\n\n\n\nDefault.parameters = { storySource: { source: \"() => <PageStory />\" }, ...Default.parameters };\nWithoutPasswordField.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { password: false }\\n        }}\\n    />\\n)\" }, ...WithoutPasswordField.parameters };\nWithoutRegistration.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { registrationAllowed: false }\\n        }}\\n    />\\n)\" }, ...WithoutRegistration.parameters };\nWithoutRememberMe.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { rememberMe: false }\\n        }}\\n    />\\n)\" }, ...WithoutRememberMe.parameters };\nWithoutPasswordReset.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { resetPasswordAllowed: false }\\n        }}\\n    />\\n)\" }, ...WithoutPasswordReset.parameters };\nWithEmailAsUsername.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            realm: { loginWithEmailAllowed: false }\\n        }}\\n    />\\n)\" }, ...WithEmailAsUsername.parameters };\nWithPresetUsername.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: \\\"max.mustermann@mail.com\\\" }\\n        }}\\n    />\\n)\" }, ...WithPresetUsername.parameters };\nWithImmutablePresetUsername.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            login: { username: 'max.mustermann@mail.com' },\\n            usernameEditDisabled: true\\n        }}\\n    />\\n)\" }, ...WithImmutablePresetUsername.parameters };\nWithSocialProviders.parameters = { storySource: { source: \"() => (\\n    <PageStory\\n        kcContext={{\\n            social: {\\n                displayInfo: true, providers: [\\n                    { loginUrl: 'google', alias: 'google', providerId: 'google', displayName: 'Google' },\\n                    { loginUrl: 'microsoft', alias: 'microsoft', providerId: 'microsoft', displayName: 'Microsoft' },\\n                    { loginUrl: 'facebook', alias: 'facebook', providerId: 'facebook', displayName: 'Facebook' },\\n                    { loginUrl: 'instagram', alias: 'instagram', providerId: 'instagram', displayName: 'Instagram' },\\n                    { loginUrl: 'twitter', alias: 'twitter', providerId: 'twitter', displayName: 'Twitter' },\\n                    { loginUrl: 'linkedin', alias: 'linkedin', providerId: 'linkedin', displayName: 'LinkedIn' },\\n                    { loginUrl: 'stackoverflow', alias: 'stackoverflow', providerId: 'stackoverflow', displayName: 'Stackoverflow' },\\n                    { loginUrl: 'github', alias: 'github', providerId: 'github', displayName: 'Github' },\\n                    { loginUrl: 'gitlab', alias: 'gitlab', providerId: 'gitlab', displayName: 'Gitlab' },\\n                    { loginUrl: 'bitbucket', alias: 'bitbucket', providerId: 'bitbucket', displayName: 'Bitbucket' },\\n                    { loginUrl: 'paypal', alias: 'paypal', providerId: 'paypal', displayName: 'PayPal' },\\n                    { loginUrl: 'openshift', alias: 'openshift', providerId: 'openshift', displayName: 'OpenShift' },\\n\\n                ]\\n            }\\n        }}\\n    />\\n)\" }, ...WithSocialProviders.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}