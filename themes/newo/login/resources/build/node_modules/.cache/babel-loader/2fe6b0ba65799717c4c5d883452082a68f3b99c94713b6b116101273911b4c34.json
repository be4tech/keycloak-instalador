{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useConstCallback } from \"../../tools/useConstCallback\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function LoginPassword(props) {\n  var _a;\n  const {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    Template,\n    classes\n  } = props;\n  const {\n    getClassName\n  } = useGetClassName({\n    doUseDefaultCss,\n    classes\n  });\n  const {\n    realm,\n    url,\n    login\n  } = kcContext;\n  const {\n    msg,\n    msgStr\n  } = i18n;\n  const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n  const onSubmit = useConstCallback(e => {\n    e.preventDefault();\n    setIsLoginButtonDisabled(true);\n    const formElement = e.target;\n    formElement.submit();\n  });\n  return _jsx(Template, Object.assign({}, {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes\n  }, {\n    headerNode: msg(\"doLogIn\")\n  }, {\n    children: _jsx(\"div\", Object.assign({\n      id: \"kc-form\"\n    }, {\n      children: _jsx(\"div\", Object.assign({\n        id: \"kc-form-wrapper\"\n      }, {\n        children: _jsxs(\"form\", Object.assign({\n          id: \"kc-form-login\",\n          onSubmit: onSubmit,\n          action: url.loginAction,\n          method: \"post\"\n        }, {\n          children: [_jsxs(\"div\", Object.assign({\n            className: getClassName(\"kcFormGroupClass\")\n          }, {\n            children: [_jsx(\"hr\", {}), _jsx(\"label\", Object.assign({\n              htmlFor: \"password\",\n              className: getClassName(\"kcLabelClass\")\n            }, {\n              children: msg(\"password\")\n            })), _jsx(\"input\", {\n              tabIndex: 2,\n              id: \"password\",\n              className: getClassName(\"kcInputClass\"),\n              name: \"password\",\n              type: \"password\",\n              autoFocus: true,\n              autoComplete: \"on\",\n              defaultValue: (_a = login.password) !== null && _a !== void 0 ? _a : \"\"\n            })]\n          })), _jsxs(\"div\", Object.assign({\n            className: clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))\n          }, {\n            children: [_jsx(\"div\", {\n              id: \"kc-form-options\"\n            }), _jsx(\"div\", Object.assign({\n              className: getClassName(\"kcFormOptionsWrapperClass\")\n            }, {\n              children: realm.resetPasswordAllowed && _jsx(\"span\", {\n                children: _jsx(\"a\", Object.assign({\n                  tabIndex: 5,\n                  href: url.loginResetCredentialsUrl\n                }, {\n                  children: msg(\"doForgotPassword\")\n                }))\n              })\n            }))]\n          })), _jsx(\"div\", Object.assign({\n            id: \"kc-form-buttons\",\n            className: getClassName(\"kcFormGroupClass\")\n          }, {\n            children: _jsx(\"input\", {\n              tabIndex: 4,\n              className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")),\n              name: \"login\",\n              id: \"kc-login\",\n              type: \"submit\",\n              value: msgStr(\"doLogIn\"),\n              disabled: isLoginButtonDisabled\n            })\n          }))]\n        }))\n      }))\n    }))\n  }));\n}","map":{"version":3,"names":["useState","clsx","useConstCallback","useGetClassName","LoginPassword","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","realm","url","login","msg","msgStr","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","e","preventDefault","formElement","target","submit","_jsx","Object","assign","headerNode","children","id","_jsxs","action","loginAction","method","className","htmlFor","tabIndex","name","type","autoFocus","autoComplete","defaultValue","_a","password","resetPasswordAllowed","href","loginResetCredentialsUrl","value","disabled"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/pages/LoginPassword.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginPassword(props: PageProps<Extract<KcContext, { \"pageId\": \"login-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { realm, url, login } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n\n        setIsLoginButtonDisabled(true);\n\n        const formElement = e.target as HTMLFormElement;\n\n        formElement.submit();\n    });\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"doLogIn\")}>\n            <div id=\"kc-form\">\n                <div id=\"kc-form-wrapper\">\n                    <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\">\n                        <div className={getClassName(\"kcFormGroupClass\")}>\n                            <hr />\n                            <label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"password\")}\n                            </label>\n                            <input\n                                tabIndex={2}\n                                id=\"password\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"password\"\n                                type=\"password\"\n                                autoFocus={true}\n                                autoComplete=\"on\"\n                                defaultValue={login.password ?? \"\"}\n                            />\n                        </div>\n                        <div className={clsx(getClassName(\"kcFormGroupClass\"), getClassName(\"kcFormSettingClass\"))}>\n                            <div id=\"kc-form-options\" />\n                            <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                                {realm.resetPasswordAllowed && (\n                                    <span>\n                                        <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                            {msg(\"doForgotPassword\")}\n                                        </a>\n                                    </span>\n                                )}\n                            </div>\n                        </div>\n                        <div id=\"kc-form-buttons\" className={getClassName(\"kcFormGroupClass\")}>\n                            <input\n                                tabIndex={4}\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonBlockClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                name=\"login\"\n                                id=\"kc-login\"\n                                type=\"submit\"\n                                value={msgStr(\"doLogIn\")}\n                                disabled={isLoginButtonDisabled}\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </Template>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}