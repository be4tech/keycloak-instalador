{"ast":null,"code":"\"use strict\";\n\nif (!Array.prototype.every) {\n  Array.prototype.every = function (callbackfn, thisArg) {\n    \"use strict\";\n\n    var T, k;\n    if (this == null) {\n      throw new TypeError(\"this is null or not defined\");\n    }\n    // 1. Let O be the result of calling ToObject passing the this\n    //    value as the argument.\n    var O = Object(this);\n    // 2. Let lenValue be the result of calling the Get internal method\n    //    of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.\n    if (typeof callbackfn !== \"function\" && Object.prototype.toString.call(callbackfn) !== \"[object Function]\") {\n      throw new TypeError();\n    }\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n    // 6. Let k be 0.\n    k = 0;\n    // 7. Repeat, while k < len\n    while (k < len) {\n      var kValue;\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal\n      //    method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n        var testResult;\n        // i. Let kValue be the result of calling the Get internal method\n        //    of O with argument Pk.\n        kValue = O[k];\n        // ii. Let testResult be the result of calling the Call internal method\n        // of callbackfn with T as the this value if T is not undefined\n        // else is the result of calling callbackfn\n        // and argument list containing kValue, k, and O.\n        if (T) testResult = callbackfn.call(T, kValue, k, O);else testResult = callbackfn(kValue, k, O);\n        // iii. If ToBoolean(testResult) is false, return false.\n        if (!testResult) {\n          return false;\n        }\n      }\n      k++;\n    }\n    return true;\n  };\n}","map":{"version":3,"names":["Array","prototype","every","callbackfn","thisArg","T","k","TypeError","O","Object","len","length","toString","call","arguments","kValue","testResult"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/tools/Array.prototype.every.ts"],"sourcesContent":["if (!Array.prototype.every) {\n    Array.prototype.every = function (callbackfn: any, thisArg: any) {\n        \"use strict\";\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(\"this is null or not defined\");\n        }\n\n        // 1. Let O be the result of calling ToObject passing the this\n        //    value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method\n        //    of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.\n        if (typeof callbackfn !== \"function\" && Object.prototype.toString.call(callbackfn) !== \"[object Function]\") {\n            throw new TypeError();\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0.\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal\n            //    method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                var testResult;\n                // i. Let kValue be the result of calling the Get internal method\n                //    of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Let testResult be the result of calling the Call internal method\n                // of callbackfn with T as the this value if T is not undefined\n                // else is the result of calling callbackfn\n                // and argument list containing kValue, k, and O.\n                if (T) testResult = callbackfn.call(T, kValue, k, O);\n                else testResult = callbackfn(kValue, k, O);\n\n                // iii. If ToBoolean(testResult) is false, return false.\n                if (!testResult) {\n                    return false;\n                }\n            }\n            k++;\n        }\n        return true;\n    };\n}\n"],"mappings":";;AAAA,IAAI,CAACA,KAAK,CAACC,SAAS,CAACC,KAAK,EAAE;EACxBF,KAAK,CAACC,SAAS,CAACC,KAAK,GAAG,UAAUC,UAAe,EAAEC,OAAY;IAC3D,YAAY;;IACZ,IAAIC,CAAC,EAAEC,CAAC;IAER,IAAI,IAAI,IAAI,IAAI,EAAE;MACd,MAAM,IAAIC,SAAS,CAAC,6BAA6B,CAAC;;IAGtD;IACA;IACA,IAAIC,CAAC,GAAGC,MAAM,CAAC,IAAI,CAAC;IAEpB;IACA;IACA;IACA,IAAIC,GAAG,GAAGF,CAAC,CAACG,MAAM,KAAK,CAAC;IAExB;IACA,IAAI,OAAOR,UAAU,KAAK,UAAU,IAAIM,MAAM,CAACR,SAAS,CAACW,QAAQ,CAACC,IAAI,CAACV,UAAU,CAAC,KAAK,mBAAmB,EAAE;MACxG,MAAM,IAAII,SAAS,EAAE;;IAGzB;IACA,IAAIO,SAAS,CAACH,MAAM,GAAG,CAAC,EAAE;MACtBN,CAAC,GAAGD,OAAO;;IAGf;IACAE,CAAC,GAAG,CAAC;IAEL;IACA,OAAOA,CAAC,GAAGI,GAAG,EAAE;MACZ,IAAIK,MAAM;MAEV;MACA;MACA;MACA;MACA;MACA;MACA,IAAIT,CAAC,IAAIE,CAAC,EAAE;QACR,IAAIQ,UAAU;QACd;QACA;QACAD,MAAM,GAAGP,CAAC,CAACF,CAAC,CAAC;QAEb;QACA;QACA;QACA;QACA,IAAID,CAAC,EAAEW,UAAU,GAAGb,UAAU,CAACU,IAAI,CAACR,CAAC,EAAEU,MAAM,EAAET,CAAC,EAAEE,CAAC,CAAC,CAAC,KAChDQ,UAAU,GAAGb,UAAU,CAACY,MAAM,EAAET,CAAC,EAAEE,CAAC,CAAC;QAE1C;QACA,IAAI,CAACQ,UAAU,EAAE;UACb,OAAO,KAAK;;;MAGpBV,CAAC,EAAE;;IAEP,OAAO,IAAI;EACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}