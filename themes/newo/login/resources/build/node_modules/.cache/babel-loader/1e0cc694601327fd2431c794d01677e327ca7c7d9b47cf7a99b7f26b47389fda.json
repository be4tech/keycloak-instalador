{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport \"minimal-polyfills/Object.fromEntries\";\n//NOTE for later: https://github.com/remarkjs/react-markdown/blob/236182ecf30bd89c1e5a7652acaf8d0bf81e6170/src/renderers.js#L7-L35\nimport { useEffect, useState, useRef } from \"react\";\nimport fallbackMessages from \"./baseMessages/en\";\nimport { getMessages } from \"./baseMessages\";\nimport { assert } from \"tsafe/assert\";\nimport { Markdown } from \"../../tools/Markdown\";\nexport const fallbackLanguageTag = \"en\";\nassert();\nexport function createUseI18n(extraMessages) {\n  function useI18n(params) {\n    const {\n      kcContext\n    } = params;\n    const [i18n, setI18n] = useState(undefined);\n    const refHasStartedFetching = useRef(false);\n    useEffect(() => {\n      if (refHasStartedFetching.current) {\n        return;\n      }\n      refHasStartedFetching.current = true;\n      (async () => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const {\n          currentLanguageTag = fallbackLanguageTag\n        } = (_a = kcContext.locale) !== null && _a !== void 0 ? _a : {};\n        setI18n(Object.assign(Object.assign({}, createI18nTranslationFunctions({\n          \"fallbackMessages\": Object.assign(Object.assign(Object.assign({}, fallbackMessages), (_b = keycloakifyExtraMessages[fallbackLanguageTag]) !== null && _b !== void 0 ? _b : {}), (_c = extraMessages[fallbackLanguageTag]) !== null && _c !== void 0 ? _c : {}),\n          \"messages\": Object.assign(Object.assign(Object.assign({}, await getMessages(currentLanguageTag)), (_d = keycloakifyExtraMessages[currentLanguageTag]) !== null && _d !== void 0 ? _d : {}), (_e = extraMessages[currentLanguageTag]) !== null && _e !== void 0 ? _e : {})\n        })), {\n          currentLanguageTag,\n          \"changeLocale\": newLanguageTag => {\n            const {\n              locale\n            } = kcContext;\n            assert(locale !== undefined, \"Internationalization not enabled\");\n            const targetSupportedLocale = locale.supported.find(_ref => {\n              let {\n                languageTag\n              } = _ref;\n              return languageTag === newLanguageTag;\n            });\n            assert(targetSupportedLocale !== undefined, `${newLanguageTag} need to be enabled in Keycloak admin`);\n            window.location.href = targetSupportedLocale.url;\n            assert(false, \"never\");\n          },\n          \"labelBySupportedLanguageTag\": Object.fromEntries(((_g = (_f = kcContext.locale) === null || _f === void 0 ? void 0 : _f.supported) !== null && _g !== void 0 ? _g : []).map(_ref2 => {\n            let {\n              languageTag,\n              label\n            } = _ref2;\n            return [languageTag, label];\n          }))\n        }));\n      })();\n    }, []);\n    return i18n !== null && i18n !== void 0 ? i18n : null;\n  }\n  return {\n    useI18n\n  };\n}\nfunction createI18nTranslationFunctions(params) {\n  const {\n    fallbackMessages,\n    messages\n  } = params;\n  function resolveMsg(props) {\n    var _a;\n    const {\n      key,\n      args,\n      doRenderMarkdown\n    } = props;\n    const messageOrUndefined = (_a = messages[key]) !== null && _a !== void 0 ? _a : fallbackMessages[key];\n    if (messageOrUndefined === undefined) {\n      return undefined;\n    }\n    const message = messageOrUndefined;\n    const messageWithArgsInjectedIfAny = (() => {\n      var _a;\n      const startIndex = (_a = message.match(/{[0-9]+}/g)) === null || _a === void 0 ? void 0 : _a.map(g => g.match(/{([0-9]+)}/)[1]).map(indexStr => parseInt(indexStr)).sort((a, b) => a - b)[0];\n      if (startIndex === undefined) {\n        // No {0} in message (no arguments expected)\n        return message;\n      }\n      let messageWithArgsInjected = message;\n      args.forEach((arg, i) => {\n        if (arg === undefined) {\n          return;\n        }\n        messageWithArgsInjected = messageWithArgsInjected.replace(new RegExp(`\\\\{${i + startIndex}\\\\}`, \"g\"), arg);\n      });\n      return messageWithArgsInjected;\n    })();\n    return doRenderMarkdown ? _jsx(Markdown, Object.assign({\n      allowDangerousHtml: true,\n      renderers: {\n        \"paragraph\": \"span\"\n      }\n    }, {\n      children: messageWithArgsInjectedIfAny\n    })) : messageWithArgsInjectedIfAny;\n  }\n  function resolveMsgAdvanced(props) {\n    const {\n      key,\n      args,\n      doRenderMarkdown\n    } = props;\n    const match = key.match(/^\\$\\{([^{]+)\\}$/);\n    const keyUnwrappedFromCurlyBraces = match === null ? key : match[1];\n    const out = resolveMsg({\n      \"key\": keyUnwrappedFromCurlyBraces,\n      args,\n      doRenderMarkdown\n    });\n    return out !== undefined ? out : doRenderMarkdown ? _jsx(\"span\", {\n      children: keyUnwrappedFromCurlyBraces\n    }) : keyUnwrappedFromCurlyBraces;\n  }\n  return {\n    \"msgStr\": function (key) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return resolveMsg({\n        key,\n        args,\n        \"doRenderMarkdown\": false\n      });\n    },\n    \"msg\": function (key) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      return resolveMsg({\n        key,\n        args,\n        \"doRenderMarkdown\": true\n      });\n    },\n    \"advancedMsg\": function (key) {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n      return resolveMsgAdvanced({\n        key,\n        args,\n        \"doRenderMarkdown\": true\n      });\n    },\n    \"advancedMsgStr\": function (key) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      return resolveMsgAdvanced({\n        key,\n        args,\n        \"doRenderMarkdown\": false\n      });\n    }\n  };\n}\nconst keycloakifyExtraMessages = {\n  \"en\": {\n    \"shouldBeEqual\": \"{0} should be equal to {1}\",\n    \"shouldBeDifferent\": \"{0} should be different to {1}\",\n    \"shouldMatchPattern\": \"Pattern should match: `/{0}/`\",\n    \"mustBeAnInteger\": \"Must be an integer\",\n    \"notAValidOption\": \"Not a valid option\",\n    \"selectAnOption\": \"Select an option\"\n  },\n  \"fr\": {\n    /* spell-checker: disable */\n    \"shouldBeEqual\": \"{0} doit être égal à {1}\",\n    \"shouldBeDifferent\": \"{0} doit être différent de {1}\",\n    \"shouldMatchPattern\": \"Dois respecter le schéma: `/{0}/`\",\n    \"mustBeAnInteger\": \"Doit être un nombre entier\",\n    \"notAValidOption\": \"N'est pas une option valide\",\n    \"logoutConfirmTitle\": \"Déconnexion\",\n    \"logoutConfirmHeader\": \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n    \"doLogout\": \"Se déconnecter\",\n    \"selectAnOption\": \"Sélectionner une option\"\n    /* spell-checker: enable */\n  }\n};","map":{"version":3,"names":["useEffect","useState","useRef","fallbackMessages","getMessages","assert","Markdown","fallbackLanguageTag","createUseI18n","extraMessages","useI18n","params","kcContext","i18n","setI18n","undefined","refHasStartedFetching","current","currentLanguageTag","_a","locale","Object","assign","createI18nTranslationFunctions","_b","keycloakifyExtraMessages","_c","_d","_e","newLanguageTag","targetSupportedLocale","supported","find","_ref","languageTag","window","location","href","url","fromEntries","_g","_f","map","_ref2","label","messages","resolveMsg","props","key","args","doRenderMarkdown","messageOrUndefined","message","messageWithArgsInjectedIfAny","startIndex","match","g","indexStr","parseInt","sort","a","b","messageWithArgsInjected","forEach","arg","i","replace","RegExp","_jsx","allowDangerousHtml","renderers","children","resolveMsgAdvanced","keyUnwrappedFromCurlyBraces","out","msgStr","_len","arguments","length","Array","_key","msg","_len2","_key2","advancedMsg","_len3","_key3","advancedMsgStr","_len4","_key4"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/i18n/i18n.tsx"],"sourcesContent":["import \"minimal-polyfills/Object.fromEntries\";\n//NOTE for later: https://github.com/remarkjs/react-markdown/blob/236182ecf30bd89c1e5a7652acaf8d0bf81e6170/src/renderers.js#L7-L35\nimport { useEffect, useState, useRef } from \"react\";\nimport fallbackMessages from \"./baseMessages/en\";\nimport { getMessages } from \"./baseMessages\";\nimport { assert } from \"tsafe/assert\";\nimport type { KcContext } from \"../kcContext/KcContext\";\nimport { Markdown } from \"keycloakify/tools/Markdown\";\n\nexport const fallbackLanguageTag = \"en\";\n\nexport type KcContextLike = {\n    locale?: {\n        currentLanguageTag: string;\n        supported: { languageTag: string; url: string; label: string }[];\n    };\n};\n\nassert<KcContext extends KcContextLike ? true : false>();\n\nexport type MessageKey = keyof typeof fallbackMessages | keyof (typeof keycloakifyExtraMessages)[typeof fallbackLanguageTag];\n\nexport type GenericI18n<MessageKey extends string> = {\n    /**\n     * e.g: \"en\", \"fr\", \"zh-CN\"\n     *\n     * The current language\n     */\n    currentLanguageTag: string;\n    /**\n     * To call when the user switch language.\n     * This will cause the page to be reloaded,\n     * on next load currentLanguageTag === newLanguageTag\n     */\n    changeLocale: (newLanguageTag: string) => never;\n    /**\n     * e.g. \"en\" => \"English\", \"fr\" => \"Français\", ...\n     *\n     * Used to render a select that enable user to switch language.\n     * ex: https://user-images.githubusercontent.com/6702424/186044799-38801eec-4e89-483b-81dd-8e9233e8c0eb.png\n     * */\n    labelBySupportedLanguageTag: Record<string, string>;\n    /**\n     * Examples assuming currentLanguageTag === \"en\"\n     *\n     * msg(\"access-denied\") === <span>Access denied</span>\n     * msg(\"impersonateTitleHtml\", \"Foo\") === <span><strong>Foo</strong> Impersonate User</span>\n     */\n    msg: (key: MessageKey, ...args: (string | undefined)[]) => JSX.Element;\n    /**\n     * It's the same thing as msg() but instead of returning a JSX.Element it returns a string.\n     * It can be more convenient to manipulate strings but if there are HTML tags it wont render.\n     * msgStr(\"impersonateTitleHtml\", \"Foo\") === \"<strong>Foo</strong> Impersonate User\"\n     */\n    msgStr: (key: MessageKey, ...args: (string | undefined)[]) => string;\n    /**\n     * Examples assuming currentLanguageTag === \"en\"\n     * advancedMsg(\"${access-denied} foo bar\") === <span>${msgStr(\"access-denied\")} foo bar<span> === <span>Access denied foo bar</span>\n     * advancedMsg(\"${access-denied}\") === advancedMsg(\"access-denied\") === msg(\"access-denied\") === <span>Access denied</span>\n     * advancedMsg(\"${not-a-message-key}\") === advancedMsg(not-a-message-key\") === <span>not-a-message-key</span>\n     */\n    advancedMsg: (key: string, ...args: (string | undefined)[]) => JSX.Element;\n    /**\n     * Examples assuming currentLanguageTag === \"en\"\n     * advancedMsg(\"${access-denied} foo bar\") === msg(\"access-denied\") + \" foo bar\" === \"Access denied foo bar\"\n     * advancedMsg(\"${not-a-message-key}\") === advancedMsg(not-a-message-key\") === \"not-a-message-key\"\n     */\n    advancedMsgStr: (key: string, ...args: (string | undefined)[]) => string;\n};\n\nexport type I18n = GenericI18n<MessageKey>;\n\nexport function createUseI18n<ExtraMessageKey extends string = never>(extraMessages: {\n    [languageTag: string]: { [key in ExtraMessageKey]: string };\n}) {\n    function useI18n(params: { kcContext: KcContextLike }): GenericI18n<MessageKey | ExtraMessageKey> | null {\n        const { kcContext } = params;\n\n        const [i18n, setI18n] = useState<GenericI18n<ExtraMessageKey | MessageKey> | undefined>(undefined);\n\n        const refHasStartedFetching = useRef(false);\n\n        useEffect(() => {\n            if (refHasStartedFetching.current) {\n                return;\n            }\n\n            refHasStartedFetching.current = true;\n\n            (async () => {\n                const { currentLanguageTag = fallbackLanguageTag } = kcContext.locale ?? {};\n\n                setI18n({\n                    ...createI18nTranslationFunctions({\n                        \"fallbackMessages\": {\n                            ...fallbackMessages,\n                            ...(keycloakifyExtraMessages[fallbackLanguageTag] ?? {}),\n                            ...(extraMessages[fallbackLanguageTag] ?? {})\n                        } as any,\n                        \"messages\": {\n                            ...(await getMessages(currentLanguageTag)),\n                            ...((keycloakifyExtraMessages as any)[currentLanguageTag] ?? {}),\n                            ...(extraMessages[currentLanguageTag] ?? {})\n                        } as any\n                    }),\n                    currentLanguageTag,\n                    \"changeLocale\": newLanguageTag => {\n                        const { locale } = kcContext;\n\n                        assert(locale !== undefined, \"Internationalization not enabled\");\n\n                        const targetSupportedLocale = locale.supported.find(({ languageTag }) => languageTag === newLanguageTag);\n\n                        assert(targetSupportedLocale !== undefined, `${newLanguageTag} need to be enabled in Keycloak admin`);\n\n                        window.location.href = targetSupportedLocale.url;\n\n                        assert(false, \"never\");\n                    },\n                    \"labelBySupportedLanguageTag\": Object.fromEntries(\n                        (kcContext.locale?.supported ?? []).map(({ languageTag, label }) => [languageTag, label])\n                    )\n                });\n            })();\n        }, []);\n\n        return i18n ?? null;\n    }\n\n    return { useI18n };\n}\n\nfunction createI18nTranslationFunctions<MessageKey extends string>(params: {\n    fallbackMessages: Record<MessageKey, string>;\n    messages: Record<MessageKey, string>;\n}): Pick<GenericI18n<MessageKey>, \"msg\" | \"msgStr\" | \"advancedMsg\" | \"advancedMsgStr\"> {\n    const { fallbackMessages, messages } = params;\n\n    function resolveMsg(props: { key: string; args: (string | undefined)[]; doRenderMarkdown: boolean }): string | JSX.Element | undefined {\n        const { key, args, doRenderMarkdown } = props;\n\n        const messageOrUndefined: string | undefined = (messages as any)[key] ?? (fallbackMessages as any)[key];\n\n        if (messageOrUndefined === undefined) {\n            return undefined;\n        }\n\n        const message = messageOrUndefined;\n\n        const messageWithArgsInjectedIfAny = (() => {\n            const startIndex = message\n                .match(/{[0-9]+}/g)\n                ?.map(g => g.match(/{([0-9]+)}/)![1])\n                .map(indexStr => parseInt(indexStr))\n                .sort((a, b) => a - b)[0];\n\n            if (startIndex === undefined) {\n                // No {0} in message (no arguments expected)\n                return message;\n            }\n\n            let messageWithArgsInjected = message;\n\n            args.forEach((arg, i) => {\n                if (arg === undefined) {\n                    return;\n                }\n\n                messageWithArgsInjected = messageWithArgsInjected.replace(new RegExp(`\\\\{${i + startIndex}\\\\}`, \"g\"), arg);\n            });\n\n            return messageWithArgsInjected;\n        })();\n\n        return doRenderMarkdown ? (\n            <Markdown allowDangerousHtml renderers={{ \"paragraph\": \"span\" }}>\n                {messageWithArgsInjectedIfAny}\n            </Markdown>\n        ) : (\n            messageWithArgsInjectedIfAny\n        );\n    }\n\n    function resolveMsgAdvanced(props: { key: string; args: (string | undefined)[]; doRenderMarkdown: boolean }): JSX.Element | string {\n        const { key, args, doRenderMarkdown } = props;\n\n        const match = key.match(/^\\$\\{([^{]+)\\}$/);\n\n        const keyUnwrappedFromCurlyBraces = match === null ? key : match[1];\n\n        const out = resolveMsg({\n            \"key\": keyUnwrappedFromCurlyBraces,\n            args,\n            doRenderMarkdown\n        });\n\n        return (out !== undefined ? out : doRenderMarkdown ? <span>{keyUnwrappedFromCurlyBraces}</span> : keyUnwrappedFromCurlyBraces) as any;\n    }\n\n    return {\n        \"msgStr\": (key, ...args) => resolveMsg({ key, args, \"doRenderMarkdown\": false }) as string,\n        \"msg\": (key, ...args) => resolveMsg({ key, args, \"doRenderMarkdown\": true }) as JSX.Element,\n        \"advancedMsg\": (key, ...args) => resolveMsgAdvanced({ key, args, \"doRenderMarkdown\": true }) as JSX.Element,\n        \"advancedMsgStr\": (key, ...args) => resolveMsgAdvanced({ key, args, \"doRenderMarkdown\": false }) as string\n    };\n}\n\nconst keycloakifyExtraMessages = {\n    \"en\": {\n        \"shouldBeEqual\": \"{0} should be equal to {1}\",\n        \"shouldBeDifferent\": \"{0} should be different to {1}\",\n        \"shouldMatchPattern\": \"Pattern should match: `/{0}/`\",\n        \"mustBeAnInteger\": \"Must be an integer\",\n        \"notAValidOption\": \"Not a valid option\",\n        \"selectAnOption\": \"Select an option\"\n    },\n    \"fr\": {\n        /* spell-checker: disable */\n        \"shouldBeEqual\": \"{0} doit être égal à {1}\",\n        \"shouldBeDifferent\": \"{0} doit être différent de {1}\",\n        \"shouldMatchPattern\": \"Dois respecter le schéma: `/{0}/`\",\n        \"mustBeAnInteger\": \"Doit être un nombre entier\",\n        \"notAValidOption\": \"N'est pas une option valide\",\n\n        \"logoutConfirmTitle\": \"Déconnexion\",\n        \"logoutConfirmHeader\": \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n        \"doLogout\": \"Se déconnecter\",\n        \"selectAnOption\": \"Sélectionner une option\"\n        /* spell-checker: enable */\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}