{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function UpdateEmail(props) {\n  var _a;\n  const {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    Template,\n    classes\n  } = props;\n  const {\n    getClassName\n  } = useGetClassName({\n    doUseDefaultCss,\n    classes\n  });\n  const {\n    msg,\n    msgStr\n  } = i18n;\n  const {\n    url,\n    messagesPerField,\n    isAppInitiatedAction,\n    email\n  } = kcContext;\n  return _jsx(Template, Object.assign({}, {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes\n  }, {\n    headerNode: msg(\"updateEmailTitle\")\n  }, {\n    children: _jsxs(\"form\", Object.assign({\n      id: \"kc-update-email-form\",\n      className: getClassName(\"kcFormClass\"),\n      action: url.loginAction,\n      method: \"post\"\n    }, {\n      children: [_jsxs(\"div\", Object.assign({\n        className: clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"email\", getClassName(\"kcFormGroupErrorClass\")))\n      }, {\n        children: [_jsx(\"div\", Object.assign({\n          className: getClassName(\"kcLabelWrapperClass\")\n        }, {\n          children: _jsx(\"label\", Object.assign({\n            htmlFor: \"email\",\n            className: getClassName(\"kcLabelClass\")\n          }, {\n            children: msg(\"email\")\n          }))\n        })), _jsx(\"div\", Object.assign({\n          className: getClassName(\"kcInputWrapperClass\")\n        }, {\n          children: _jsx(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            defaultValue: (_a = email.value) !== null && _a !== void 0 ? _a : \"\",\n            className: getClassName(\"kcInputClass\"),\n            \"aria-invalid\": messagesPerField.existsError(\"email\")\n          })\n        }))]\n      })), _jsxs(\"div\", Object.assign({\n        className: getClassName(\"kcFormGroupClass\")\n      }, {\n        children: [_jsx(\"div\", Object.assign({\n          id: \"kc-form-options\",\n          className: getClassName(\"kcFormOptionsClass\")\n        }, {\n          children: _jsx(\"div\", {\n            className: getClassName(\"kcFormOptionsWrapperClass\")\n          })\n        })), _jsx(\"div\", Object.assign({\n          id: \"kc-form-buttons\",\n          className: getClassName(\"kcFormButtonsClass\")\n        }, {\n          children: isAppInitiatedAction ? _jsxs(_Fragment, {\n            children: [_jsx(\"input\", {\n              className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\")),\n              type: \"submit\",\n              defaultValue: msgStr(\"doSubmit\")\n            }), _jsx(\"button\", Object.assign({\n              className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonDefaultClass\"), getClassName(\"kcButtonLargeClass\")),\n              type: \"submit\",\n              name: \"cancel-aia\",\n              value: \"true\"\n            }, {\n              children: msg(\"doCancel\")\n            }))]\n          }) : _jsx(\"input\", {\n            className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")),\n            type: \"submit\",\n            defaultValue: msgStr(\"doSubmit\")\n          })\n        }))]\n      }))]\n    }))\n  }));\n}","map":{"version":3,"names":["clsx","useGetClassName","UpdateEmail","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","msg","msgStr","url","messagesPerField","isAppInitiatedAction","email","_jsx","Object","assign","headerNode","children","_jsxs","id","className","action","loginAction","method","printIfExists","htmlFor","type","name","defaultValue","_a","value","existsError","_Fragment"],"sources":["/Users/user/NewoDev/keycloakify-starter/node_modules/keycloakify/src/login/pages/UpdateEmail.tsx"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function UpdateEmail(props: PageProps<Extract<KcContext, { pageId: \"update-email.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { msg, msgStr } = i18n;\n\n    const { url, messagesPerField, isAppInitiatedAction, email } = kcContext;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"updateEmailTitle\")}>\n            <form id=\"kc-update-email-form\" className={getClassName(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                <div\n                    className={clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"email\", getClassName(\"kcFormGroupErrorClass\")))}\n                >\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"email\" className={getClassName(\"kcLabelClass\")}>\n                            {msg(\"email\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"email\"\n                            name=\"email\"\n                            defaultValue={email.value ?? \"\"}\n                            className={getClassName(\"kcInputClass\")}\n                            aria-invalid={messagesPerField.existsError(\"email\")}\n                        />\n                    </div>\n                </div>\n\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}></div>\n                    </div>\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        {isAppInitiatedAction ? (\n                            <>\n                                <input\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonPrimaryClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                                <button\n                                    className={clsx(\n                                        getClassName(\"kcButtonClass\"),\n                                        getClassName(\"kcButtonDefaultClass\"),\n                                        getClassName(\"kcButtonLargeClass\")\n                                    )}\n                                    type=\"submit\"\n                                    name=\"cancel-aia\"\n                                    value=\"true\"\n                                >\n                                    {msg(\"doCancel\")}\n                                </button>\n                            </>\n                        ) : (\n                            <input\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonBlockClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                type=\"submit\"\n                                defaultValue={msgStr(\"doSubmit\")}\n                            />\n                        )}\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}