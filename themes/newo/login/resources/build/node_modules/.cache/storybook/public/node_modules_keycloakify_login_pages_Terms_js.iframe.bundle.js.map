{"version":3,"file":"node_modules_keycloakify_login_pages_Terms_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keycloakify-starter/./node_modules/keycloakify/login/pages/Terms.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useRerenderOnStateChange } from \"evt/hooks\";\nimport { Markdown } from \"../../tools/Markdown\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nimport { evtTermMarkdown } from \"../../login/lib/useDownloadTerms\";\nexport default function Terms(props) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n    const { msg, msgStr } = i18n;\n    useRerenderOnStateChange(evtTermMarkdown);\n    const { url } = kcContext;\n    const termMarkdown = evtTermMarkdown.state;\n    if (termMarkdown === undefined) {\n        return null;\n    }\n    return (_jsxs(Template, Object.assign({}, { kcContext, i18n, doUseDefaultCss, classes }, { displayMessage: false, headerNode: msg(\"termsTitle\") }, { children: [_jsx(\"div\", Object.assign({ id: \"kc-terms-text\" }, { children: _jsx(Markdown, { children: termMarkdown }) })), _jsxs(\"form\", Object.assign({ className: \"form-actions\", action: url.loginAction, method: \"POST\" }, { children: [_jsx(\"input\", { className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonClass\"), getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\")), name: \"accept\", id: \"kc-accept\", type: \"submit\", value: msgStr(\"doAccept\") }), _jsx(\"input\", { className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonDefaultClass\"), getClassName(\"kcButtonLargeClass\")), name: \"cancel\", id: \"kc-decline\", type: \"submit\", value: msgStr(\"doDecline\") })] })), _jsx(\"div\", { className: \"clearfix\" })] })));\n}\n//# sourceMappingURL=Terms.js.map"],"names":[],"sourceRoot":""}