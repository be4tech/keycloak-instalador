{"version":3,"file":"vendors-node_modules_keycloakify_login_Template_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTA;AACA;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keycloakify-starter/./node_modules/keycloakify/lib/useGetClassName.js","webpack://keycloakify-starter/./node_modules/keycloakify/lib/usePrepareTemplate.js","webpack://keycloakify-starter/./node_modules/keycloakify/login/Template.js","webpack://keycloakify-starter/./node_modules/keycloakify/login/lib/useGetClassName.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/HTMLElement.prototype.prepend.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/assert.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/clsx.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/headInsert.js","webpack://keycloakify-starter/./node_modules/tsafe/esm/typeGuard.mjs"],"sourcesContent":["import { clsx } from \"../tools/clsx\";\nimport { useConstCallback } from \"../tools/useConstCallback\";\nexport function createUseClassName(params) {\n    const { defaultClasses } = params;\n    function useGetClassName(params) {\n        const { classes } = params;\n        const getClassName = useConstCallback((classKey) => {\n            return clsx(classKey, defaultClasses[classKey], classes === null || classes === void 0 ? void 0 : classes[classKey]);\n        });\n        return { getClassName };\n    }\n    return { useGetClassName };\n}\n//# sourceMappingURL=useGetClassName.js.map","import { useReducer, useEffect } from \"react\";\nimport { headInsert } from \"../tools/headInsert\";\nimport { pathJoin } from \"../bin/tools/pathJoin\";\nimport { clsx } from \"../tools/clsx\";\nexport function usePrepareTemplate(params) {\n    const { doFetchDefaultThemeResources, stylesCommon = [], styles = [], url, scripts = [], htmlClassName, bodyClassName } = params;\n    const [isReady, setReady] = useReducer(() => true, !doFetchDefaultThemeResources);\n    useEffect(() => {\n        if (!doFetchDefaultThemeResources) {\n            return;\n        }\n        let isUnmounted = false;\n        const removeArray = [];\n        (async () => {\n            const prLoadedArray = [];\n            [\n                ...stylesCommon.map(relativePath => pathJoin(url.resourcesCommonPath, relativePath)),\n                ...styles.map(relativePath => pathJoin(url.resourcesPath, relativePath))\n            ]\n                .reverse()\n                .forEach(href => {\n                const { prLoaded, remove } = headInsert({\n                    \"type\": \"css\",\n                    \"position\": \"prepend\",\n                    href\n                });\n                removeArray.push(remove);\n                prLoadedArray.push(prLoaded);\n            });\n            await Promise.all(prLoadedArray);\n            if (isUnmounted) {\n                return;\n            }\n            setReady();\n        })();\n        scripts.forEach(relativePath => {\n            const { remove } = headInsert({\n                \"type\": \"javascript\",\n                \"src\": pathJoin(url.resourcesPath, relativePath)\n            });\n            removeArray.push(remove);\n        });\n        return () => {\n            isUnmounted = true;\n            removeArray.forEach(remove => remove());\n        };\n    }, []);\n    useSetClassName({\n        \"target\": \"html\",\n        \"className\": htmlClassName\n    });\n    useSetClassName({\n        \"target\": \"body\",\n        \"className\": bodyClassName\n    });\n    return { isReady };\n}\nfunction useSetClassName(params) {\n    const { target, className } = params;\n    useEffect(() => {\n        if (className === undefined) {\n            return;\n        }\n        const htmlClassList = document.getElementsByTagName(target)[0].classList;\n        const tokens = clsx(className).split(\" \");\n        htmlClassList.add(...tokens);\n        return () => {\n            htmlClassList.remove(...tokens);\n        };\n    }, [className]);\n}\n//# sourceMappingURL=usePrepareTemplate.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { assert } from \"../tools/assert\";\nimport { clsx } from \"../tools/clsx\";\nimport { usePrepareTemplate } from \"../lib/usePrepareTemplate\";\nimport { useGetClassName } from \"../login/lib/useGetClassName\";\nexport default function Template(props) {\n    const { displayInfo = false, displayMessage = true, displayRequiredFields = false, displayWide = false, showAnotherWayIfPresent = true, headerNode, showUsernameNode = null, infoNode = null, kcContext, i18n, doUseDefaultCss, classes, children } = props;\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        url,\n        \"stylesCommon\": [\n            \"node_modules/patternfly/dist/css/patternfly.min.css\",\n            \"node_modules/patternfly/dist/css/patternfly-additions.min.css\",\n            \"lib/zocial/zocial.css\"\n        ],\n        \"styles\": [\"css/login.css\"],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": undefined\n    });\n    if (!isReady) {\n        return null;\n    }\n    return (_jsxs(\"div\", Object.assign({ className: getClassName(\"kcLoginClass\") }, { children: [_jsx(\"div\", Object.assign({ id: \"kc-header\", className: getClassName(\"kcHeaderClass\") }, { children: _jsx(\"div\", Object.assign({ id: \"kc-header-wrapper\", className: getClassName(\"kcHeaderWrapperClass\") }, { children: msg(\"loginTitleHtml\", realm.displayNameHtml) })) })), _jsxs(\"div\", Object.assign({ className: clsx(getClassName(\"kcFormCardClass\"), displayWide && getClassName(\"kcFormCardAccountClass\")) }, { children: [_jsxs(\"header\", Object.assign({ className: getClassName(\"kcFormHeaderClass\") }, { children: [realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (_jsx(\"div\", Object.assign({ id: \"kc-locale\" }, { children: _jsx(\"div\", Object.assign({ id: \"kc-locale-wrapper\", className: getClassName(\"kcLocaleWrapperClass\") }, { children: _jsxs(\"div\", Object.assign({ className: \"kc-dropdown\", id: \"kc-locale-dropdown\" }, { children: [_jsx(\"a\", Object.assign({ href: \"#\", id: \"kc-current-locale-link\" }, { children: labelBySupportedLanguageTag[currentLanguageTag] })), _jsx(\"ul\", { children: locale.supported.map(({ languageTag }) => (_jsx(\"li\", Object.assign({ className: \"kc-dropdown-item\" }, { children: _jsx(\"a\", Object.assign({ href: \"#\", onClick: () => changeLocale(languageTag) }, { children: labelBySupportedLanguageTag[languageTag] })) }), languageTag))) })] })) })) }))), !(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (displayRequiredFields ? (_jsxs(\"div\", Object.assign({ className: getClassName(\"kcContentWrapperClass\") }, { children: [_jsx(\"div\", Object.assign({ className: clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\") }, { children: _jsxs(\"span\", Object.assign({ className: \"subtitle\" }, { children: [_jsx(\"span\", Object.assign({ className: \"required\" }, { children: \"*\" })), msg(\"requiredFields\")] })) })), _jsx(\"div\", Object.assign({ className: \"col-md-10\" }, { children: _jsx(\"h1\", Object.assign({ id: \"kc-page-title\" }, { children: headerNode })) }))] }))) : (_jsx(\"h1\", Object.assign({ id: \"kc-page-title\" }, { children: headerNode })))) : displayRequiredFields ? (_jsxs(\"div\", Object.assign({ className: getClassName(\"kcContentWrapperClass\") }, { children: [_jsx(\"div\", Object.assign({ className: clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\") }, { children: _jsxs(\"span\", Object.assign({ className: \"subtitle\" }, { children: [_jsx(\"span\", Object.assign({ className: \"required\" }, { children: \"*\" })), \" \", msg(\"requiredFields\")] })) })), _jsxs(\"div\", Object.assign({ className: \"col-md-10\" }, { children: [showUsernameNode, _jsx(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: _jsxs(\"div\", Object.assign({ id: \"kc-username\" }, { children: [_jsx(\"label\", Object.assign({ id: \"kc-attempted-username\" }, { children: auth === null || auth === void 0 ? void 0 : auth.attemptedUsername })), _jsx(\"a\", Object.assign({ id: \"reset-login\", href: url.loginRestartFlowUrl }, { children: _jsxs(\"div\", Object.assign({ className: \"kc-login-tooltip\" }, { children: [_jsx(\"i\", { className: getClassName(\"kcResetFlowIcon\") }), _jsx(\"span\", Object.assign({ className: \"kc-tooltip-text\" }, { children: msg(\"restartLoginTooltip\") }))] })) }))] })) }))] }))] }))) : (_jsxs(_Fragment, { children: [showUsernameNode, _jsx(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: _jsxs(\"div\", Object.assign({ id: \"kc-username\" }, { children: [_jsx(\"label\", Object.assign({ id: \"kc-attempted-username\" }, { children: auth === null || auth === void 0 ? void 0 : auth.attemptedUsername })), _jsx(\"a\", Object.assign({ id: \"reset-login\", href: url.loginRestartFlowUrl }, { children: _jsxs(\"div\", Object.assign({ className: \"kc-login-tooltip\" }, { children: [_jsx(\"i\", { className: getClassName(\"kcResetFlowIcon\") }), _jsx(\"span\", Object.assign({ className: \"kc-tooltip-text\" }, { children: msg(\"restartLoginTooltip\") }))] })) }))] })) }))] }))] })), _jsx(\"div\", Object.assign({ id: \"kc-content\" }, { children: _jsxs(\"div\", Object.assign({ id: \"kc-content-wrapper\" }, { children: [displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (_jsxs(\"div\", Object.assign({ className: clsx(\"alert\", `alert-${message.type}`) }, { children: [message.type === \"success\" && _jsx(\"span\", { className: getClassName(\"kcFeedbackSuccessIcon\") }), message.type === \"warning\" && _jsx(\"span\", { className: getClassName(\"kcFeedbackWarningIcon\") }), message.type === \"error\" && _jsx(\"span\", { className: getClassName(\"kcFeedbackErrorIcon\") }), message.type === \"info\" && _jsx(\"span\", { className: getClassName(\"kcFeedbackInfoIcon\") }), _jsx(\"span\", { className: \"kc-feedback-text\", dangerouslySetInnerHTML: {\n                                                \"__html\": message.summary\n                                            } })] }))), children, auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (_jsx(\"form\", Object.assign({ id: \"kc-select-try-another-way-form\", action: url.loginAction, method: \"post\", className: clsx(displayWide && getClassName(\"kcContentWrapperClass\")) }, { children: _jsx(\"div\", Object.assign({ className: clsx(displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]) }, { children: _jsxs(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: [_jsx(\"input\", { type: \"hidden\", name: \"tryAnotherWay\", value: \"on\" }), _jsx(\"a\", Object.assign({ href: \"#\", id: \"try-another-way\", onClick: () => {\n                                                        document.forms[\"kc-select-try-another-way-form\"].submit();\n                                                        return false;\n                                                    } }, { children: msg(\"doTryAnotherWay\") }))] })) })) }))), displayInfo && (_jsx(\"div\", Object.assign({ id: \"kc-info\", className: getClassName(\"kcSignUpClass\") }, { children: _jsx(\"div\", Object.assign({ id: \"kc-info-wrapper\", className: getClassName(\"kcInfoAreaWrapperClass\") }, { children: infoNode })) })))] })) }))] }))] })));\n}\n//# sourceMappingURL=Template.js.map","import { createUseClassName } from \"../../lib/useGetClassName\";\nexport const { useGetClassName } = createUseClassName({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n//# sourceMappingURL=useGetClassName.js.map","\"use strict\";\nif (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n//# sourceMappingURL=HTMLElement.prototype.prepend.js.map","export { assert } from \"tsafe/assert\";\n//# sourceMappingURL=assert.js.map","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\nexport const clsx = (...args) => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null)\n            continue;\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                }\n                else {\n                    assert(!typeGuard(arg, false));\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n//# sourceMappingURL=clsx.js.map","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\nexport function headInsert(params) {\n    const htmlElement = document.createElement((() => {\n        switch (params.type) {\n            case \"css\":\n                return \"link\";\n            case \"javascript\":\n                return \"script\";\n        }\n    })());\n    const dLoaded = new Deferred();\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n    Object.assign(htmlElement, (() => {\n        switch (params.type) {\n            case \"css\":\n                return {\n                    \"href\": params.href,\n                    \"type\": \"text/css\",\n                    \"rel\": \"stylesheet\",\n                    \"media\": \"screen,print\"\n                };\n            case \"javascript\":\n                return {\n                    \"src\": params.src,\n                    \"type\": \"text/javascript\"\n                };\n        }\n    })());\n    document.getElementsByTagName(\"head\")[0][(() => {\n        switch (params.type) {\n            case \"javascript\":\n                return \"appendChild\";\n            case \"css\":\n                return (() => {\n                    switch (params.position) {\n                        case \"append\":\n                            return \"appendChild\";\n                        case \"prepend\":\n                            return \"prepend\";\n                    }\n                })();\n        }\n    })()](htmlElement);\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n//# sourceMappingURL=headInsert.js.map","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard(_value, isMatched) {\n    return isMatched;\n}\n//# sourceMappingURL=typeGuard.mjs.map"],"names":[],"sourceRoot":""}