{"version":3,"file":"vendors-node_modules_keycloakify_login_pages_LoginOtp_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://keycloakify-starter/./node_modules/keycloakify/lib/useGetClassName.js","webpack://keycloakify-starter/./node_modules/keycloakify/login/lib/useGetClassName.js","webpack://keycloakify-starter/./node_modules/keycloakify/login/pages/LoginOtp.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/HTMLElement.prototype.prepend.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/clsx.js","webpack://keycloakify-starter/./node_modules/keycloakify/tools/headInsert.js","webpack://keycloakify-starter/./node_modules/tsafe/esm/typeGuard.mjs"],"sourcesContent":["import { clsx } from \"../tools/clsx\";\nimport { useConstCallback } from \"../tools/useConstCallback\";\nexport function createUseClassName(params) {\n    const { defaultClasses } = params;\n    function useGetClassName(params) {\n        const { classes } = params;\n        const getClassName = useConstCallback((classKey) => {\n            return clsx(classKey, defaultClasses[classKey], classes === null || classes === void 0 ? void 0 : classes[classKey]);\n        });\n        return { getClassName };\n    }\n    return { useGetClassName };\n}\n//# sourceMappingURL=useGetClassName.js.map","import { createUseClassName } from \"../../lib/useGetClassName\";\nexport const { useGetClassName } = createUseClassName({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n//# sourceMappingURL=useGetClassName.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from \"react\";\nimport { headInsert } from \"../../tools/headInsert\";\nimport { pathJoin } from \"../../bin/tools/pathJoin\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function LoginOtp(props) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n    const { otpLogin, url } = kcContext;\n    const { msg, msgStr } = i18n;\n    useEffect(() => {\n        let isCleanedUp = false;\n        const { prLoaded, remove } = headInsert({\n            \"type\": \"javascript\",\n            \"src\": pathJoin(kcContext.url.resourcesCommonPath, \"node_modules/jquery/dist/jquery.min.js\")\n        });\n        (async () => {\n            await prLoaded;\n            if (isCleanedUp) {\n                return;\n            }\n            evaluateInlineScript();\n        })();\n        return () => {\n            isCleanedUp = true;\n            remove();\n        };\n    }, []);\n    return (_jsx(Template, Object.assign({}, { kcContext, i18n, doUseDefaultCss, classes }, { headerNode: msg(\"doLogIn\") }, { children: _jsxs(\"form\", Object.assign({ id: \"kc-otp-login-form\", className: getClassName(\"kcFormClass\"), action: url.loginAction, method: \"post\" }, { children: [otpLogin.userOtpCredentials.length > 1 && (_jsx(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: _jsx(\"div\", Object.assign({ className: getClassName(\"kcInputWrapperClass\") }, { children: otpLogin.userOtpCredentials.map(otpCredential => (_jsxs(\"div\", Object.assign({ className: getClassName(\"kcSelectOTPListClass\") }, { children: [_jsx(\"input\", { type: \"hidden\", value: \"${otpCredential.id}\" }), _jsxs(\"div\", Object.assign({ className: getClassName(\"kcSelectOTPListItemClass\") }, { children: [_jsx(\"span\", { className: getClassName(\"kcAuthenticatorOtpCircleClass\") }), _jsx(\"h2\", Object.assign({ className: getClassName(\"kcSelectOTPItemHeadingClass\") }, { children: otpCredential.userLabel }))] }))] }), otpCredential.id))) })) }))), _jsxs(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: [_jsx(\"div\", Object.assign({ className: getClassName(\"kcLabelWrapperClass\") }, { children: _jsx(\"label\", Object.assign({ htmlFor: \"otp\", className: getClassName(\"kcLabelClass\") }, { children: msg(\"loginOtpOneTime\") })) })), _jsx(\"div\", Object.assign({ className: getClassName(\"kcInputWrapperClass\") }, { children: _jsx(\"input\", { id: \"otp\", name: \"otp\", autoComplete: \"off\", type: \"text\", className: getClassName(\"kcInputClass\"), autoFocus: true }) }))] })), _jsxs(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: [_jsx(\"div\", Object.assign({ id: \"kc-form-options\", className: getClassName(\"kcFormOptionsClass\") }, { children: _jsx(\"div\", { className: getClassName(\"kcFormOptionsWrapperClass\") }) })), _jsx(\"div\", Object.assign({ id: \"kc-form-buttons\", className: getClassName(\"kcFormButtonsClass\") }, { children: _jsx(\"input\", { className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")), name: \"login\", id: \"kc-login\", type: \"submit\", value: msgStr(\"doLogIn\") }) }))] }))] })) })));\n}\nfunction evaluateInlineScript() {\n    $(document).ready(function () {\n        // Card Single Select\n        $(\".card-pf-view-single-select\").click(function () {\n            if ($(this).hasClass(\"active\")) {\n                $(this).removeClass(\"active\");\n                $(this).children().removeAttr(\"name\");\n            }\n            else {\n                $(\".card-pf-view-single-select\").removeClass(\"active\");\n                $(\".card-pf-view-single-select\").children().removeAttr(\"name\");\n                $(this).addClass(\"active\");\n                $(this).children().attr(\"name\", \"selectedCredentialId\");\n            }\n        });\n        var defaultCred = $(\".card-pf-view-single-select\")[0];\n        if (defaultCred) {\n            defaultCred.click();\n        }\n    });\n}\n//# sourceMappingURL=LoginOtp.js.map","\"use strict\";\nif (!HTMLElement.prototype.prepend) {\n    HTMLElement.prototype.prepend = function (childNode) {\n        if (typeof childNode === \"string\") {\n            throw new Error(\"Error with HTMLElement.prototype.appendFirst polyfill\");\n        }\n        this.insertBefore(childNode, this.firstChild);\n    };\n}\n//# sourceMappingURL=HTMLElement.prototype.prepend.js.map","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\nexport const clsx = (...args) => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null)\n            continue;\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                }\n                else {\n                    assert(!typeGuard(arg, false));\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n//# sourceMappingURL=clsx.js.map","import \"./HTMLElement.prototype.prepend\";\nimport { Deferred } from \"evt/tools/Deferred\";\nexport function headInsert(params) {\n    const htmlElement = document.createElement((() => {\n        switch (params.type) {\n            case \"css\":\n                return \"link\";\n            case \"javascript\":\n                return \"script\";\n        }\n    })());\n    const dLoaded = new Deferred();\n    htmlElement.addEventListener(\"load\", () => dLoaded.resolve());\n    Object.assign(htmlElement, (() => {\n        switch (params.type) {\n            case \"css\":\n                return {\n                    \"href\": params.href,\n                    \"type\": \"text/css\",\n                    \"rel\": \"stylesheet\",\n                    \"media\": \"screen,print\"\n                };\n            case \"javascript\":\n                return {\n                    \"src\": params.src,\n                    \"type\": \"text/javascript\"\n                };\n        }\n    })());\n    document.getElementsByTagName(\"head\")[0][(() => {\n        switch (params.type) {\n            case \"javascript\":\n                return \"appendChild\";\n            case \"css\":\n                return (() => {\n                    switch (params.position) {\n                        case \"append\":\n                            return \"appendChild\";\n                        case \"prepend\":\n                            return \"prepend\";\n                    }\n                })();\n        }\n    })()](htmlElement);\n    return {\n        \"prLoaded\": dLoaded.pr,\n        \"remove\": () => htmlElement.remove()\n    };\n}\n//# sourceMappingURL=headInsert.js.map","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard(_value, isMatched) {\n    return isMatched;\n}\n//# sourceMappingURL=typeGuard.mjs.map"],"names":[],"sourceRoot":""}